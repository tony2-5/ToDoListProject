(()=>{"use strict";var e={28:(e,t,n)=>{n.d(t,{Z:()=>i});var r=n(537),o=n.n(r),c=n(645),a=n.n(c)()(o());a.push([e.id,'html {\n  height: 100vh;\n  width: 100vw;\n}\nbody {\n  margin:0;\n  display: grid;\n  grid-template-columns: repeat(4, 25vw);\n  grid-template-rows: repeat(5, 20vh);\n  grid-template-areas: \n    "header header header header"\n    "sideBar content content content"\n    "sideBar content content content"\n    "sideBar content content content"\n    "sideBar content content content";\n}\n#header {\n  grid-area: header;\n  background-color: red;\n}\n#sideBar {\n  display: flex;\n  flex-direction: column;\n  grid-area: sideBar;\n  background-color: blue;\n  align-items: center;\n}\n#sideBar button {\n  width: 15vw;\n  height:5vh;\n}\n#content {\n  grid-area: content;\n  background-color: green;\n}\n.toDoItem {\n  display: flex;\n  gap:3vw;\n  background-color: lightcoral;\n  border-radius: 10px;\n  align-items: center;\n}\n#addToDo {\n  display: flex;\n}\n#addToDo form {\n  background-color: lightgreen;\n  padding-right: 3vw;\n  padding-left: 3vw;\n  padding-bottom: 1vh;\n  padding-top: 1vh;\n  border-radius: 10px;\n  gap: 3vw;\n  display: flex;\n  justify-content: center;\n}\n#addToDo form div {\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n}\n#addToDo form button {\n  align-self: center;\n  width: 5vw;\n  height: 4vh;\n}\n#newProjectOverlay {\n  position: absolute;\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: rgba(0,0,0,.7);\n}\n#newProjectOverlay form {\n  display: flex;\n  flex-direction: column;\n}\n#newProjectOverlay button {\n  width: 15vw;\n  height: 3vh;\n}\n.projects {\n  display: flex;\n  align-items: center;\n}\n#selectedProject {\n  border-style: inset;\n}',"",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,YAAY;AACd;AACA;EACE,QAAQ;EACR,aAAa;EACb,sCAAsC;EACtC,mCAAmC;EACnC;;;;;qCAKmC;AACrC;AACA;EACE,iBAAiB;EACjB,qBAAqB;AACvB;AACA;EACE,aAAa;EACb,sBAAsB;EACtB,kBAAkB;EAClB,sBAAsB;EACtB,mBAAmB;AACrB;AACA;EACE,WAAW;EACX,UAAU;AACZ;AACA;EACE,kBAAkB;EAClB,uBAAuB;AACzB;AACA;EACE,aAAa;EACb,OAAO;EACP,4BAA4B;EAC5B,mBAAmB;EACnB,mBAAmB;AACrB;AACA;EACE,aAAa;AACf;AACA;EACE,4BAA4B;EAC5B,kBAAkB;EAClB,iBAAiB;EACjB,mBAAmB;EACnB,gBAAgB;EAChB,mBAAmB;EACnB,QAAQ;EACR,aAAa;EACb,uBAAuB;AACzB;AACA;EACE,aAAa;EACb,uBAAuB;EACvB,sBAAsB;AACxB;AACA;EACE,kBAAkB;EAClB,UAAU;EACV,WAAW;AACb;AACA;EACE,kBAAkB;EAClB,aAAa;EACb,YAAY;EACZ,aAAa;EACb,mBAAmB;EACnB,uBAAuB;EACvB,gCAAgC;AAClC;AACA;EACE,aAAa;EACb,sBAAsB;AACxB;AACA;EACE,WAAW;EACX,WAAW;AACb;AACA;EACE,aAAa;EACb,mBAAmB;AACrB;AACA;EACE,mBAAmB;AACrB",sourcesContent:['html {\r\n  height: 100vh;\r\n  width: 100vw;\r\n}\r\nbody {\r\n  margin:0;\r\n  display: grid;\r\n  grid-template-columns: repeat(4, 25vw);\r\n  grid-template-rows: repeat(5, 20vh);\r\n  grid-template-areas: \r\n    "header header header header"\r\n    "sideBar content content content"\r\n    "sideBar content content content"\r\n    "sideBar content content content"\r\n    "sideBar content content content";\r\n}\r\n#header {\r\n  grid-area: header;\r\n  background-color: red;\r\n}\r\n#sideBar {\r\n  display: flex;\r\n  flex-direction: column;\r\n  grid-area: sideBar;\r\n  background-color: blue;\r\n  align-items: center;\r\n}\r\n#sideBar button {\r\n  width: 15vw;\r\n  height:5vh;\r\n}\r\n#content {\r\n  grid-area: content;\r\n  background-color: green;\r\n}\r\n.toDoItem {\r\n  display: flex;\r\n  gap:3vw;\r\n  background-color: lightcoral;\r\n  border-radius: 10px;\r\n  align-items: center;\r\n}\r\n#addToDo {\r\n  display: flex;\r\n}\r\n#addToDo form {\r\n  background-color: lightgreen;\r\n  padding-right: 3vw;\r\n  padding-left: 3vw;\r\n  padding-bottom: 1vh;\r\n  padding-top: 1vh;\r\n  border-radius: 10px;\r\n  gap: 3vw;\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n#addToDo form div {\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n}\r\n#addToDo form button {\r\n  align-self: center;\r\n  width: 5vw;\r\n  height: 4vh;\r\n}\r\n#newProjectOverlay {\r\n  position: absolute;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: rgba(0,0,0,.7);\r\n}\r\n#newProjectOverlay form {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n#newProjectOverlay button {\r\n  width: 15vw;\r\n  height: 3vh;\r\n}\r\n.projects {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n#selectedProject {\r\n  border-style: inset;\r\n}'],sourceRoot:""}]);const i=a},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,o,c){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(r)for(var i=0;i<this.length;i++){var d=this[i][0];null!=d&&(a[d]=!0)}for(var s=0;s<e.length;s++){var l=[].concat(e[s]);r&&a[l[0]]||(void 0!==c&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=c),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),t.push(l))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),c="/*# ".concat(o," */");return[t].concat([c]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var c={},a=[],i=0;i<e.length;i++){var d=e[i],s=r.base?d[0]+r.base:d[0],l=c[s]||0,u="".concat(s," ").concat(l);c[s]=l+1;var A=n(u),m={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==A)t[A].references++,t[A].updater(m);else{var p=o(m,r);r.byIndex=i,t.splice(i,0,{identifier:u,updater:p,references:1})}a.push(u)}return a}function o(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,o){var c=r(e=e||[],o=o||{});return function(e){e=e||[];for(var a=0;a<c.length;a++){var i=n(c[a]);t[i].references--}for(var d=r(e,o),s=0;s<c.length;s++){var l=n(c[s]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}c=d}}},569:e=>{var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,o&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var c=n.sourceMap;c&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(c))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var c=t[r]={id:r,exports:{}};return e[r](c,c.exports,n),c.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var r=t.getElementsByTagName("script");if(r.length)for(var o=r.length-1;o>-1&&!e;)e=r[o--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),n.nc=void 0,(()=>{var e=n(379),t=n.n(e),r=n(795),o=n.n(r),c=n(569),a=n.n(c),i=n(565),d=n.n(i),s=n(216),l=n.n(s),u=n(589),A=n.n(u),m=n(28),p={};p.styleTagTransform=A(),p.setAttributes=d(),p.insert=a().bind(null,"head"),p.domAPI=o(),p.insertStyleElement=l(),t()(m.Z,p),m.Z&&m.Z.locals&&m.Z.locals;class f{itemArr=[];constructor(e){this.projectName=e}addToDo(e){this.itemArr.push(e)}removeToDo(e){this.itemArr=this.itemArr.filter((t=>t.key!==e.key))}}class h{static#e=0;constructor(e,t,n,r){this.key=h.#e++,this.title=e,this.description=t,this.dueDate=n,this.priority=r}}class C{static#t=[];static#n="Main";addProject(e){C.#t.push(e)}removeProject(e){C.#t=C.#t.filter((t=>t.projectName!==e.projectName))}getProjects(){return C.#t}getCurrentProject(){for(let e=0;e<C.#t.length;e++)if(C.#t[e].projectName===C.#n)return C.#t[e]}getCurrentProjectIndex(){for(let e=0;e<C.#t.length;e++)if(C.#t[e].projectName===C.#n)return e}setCurrentProject(e){C.#n=e.projectName}includesProject(e){return null!=C.#t.find((t=>t.projectName===e))}}function g(){const e=document.createElement("div"),t=document.createElement("form"),n=document.createElement("input"),r=document.createElement("label"),o=document.createElement("button"),c=document.createElement("button");e.setAttribute("id","newProjectOverlay"),n.setAttribute("type","text"),n.setAttribute("name","projectName"),r.setAttribute("for","projectName"),r.textContent="Enter project name: ",o.textContent="Submit",o.addEventListener("click",(e=>{const r=new C;0===n.value.trim().length?(e.preventDefault(),alert("Project name cannot be empty!")):r.includesProject(n.value)?(e.preventDefault(),alert("Can not have duplicate project!")):(e.preventDefault(),y(n.value),t.reset())})),c.textContent="Close",c.addEventListener("click",(()=>{e.remove()})),t.append(r,n,o,c),e.appendChild(t),document.body.appendChild(e)}const v=n.p+"76e37d09b6d655a6df74761a4db546fa.svg";function E(e){document.getElementById("content").replaceChildren(),function(){const e=document.getElementById("content"),t=document.createElement("div"),n=document.createElement("form"),r=document.createElement("input"),o=document.createElement("textarea"),c=document.createElement("input"),a=document.createElement("select"),i=document.createElement("option"),d=document.createElement("option"),s=document.createElement("option"),l=document.createElement("label"),u=document.createElement("label"),A=document.createElement("label"),m=document.createElement("label"),p=document.createElement("button");t.setAttribute("id","addToDo");const f=document.createElement("div");l.setAttribute("for","title"),l.textContent="Title: ",r.setAttribute("type","text"),r.setAttribute("name","title"),f.append(l,r);const h=document.createElement("div");u.setAttribute("for","description"),u.textContent="Description: ",o.setAttribute("name","description"),o.setAttribute("rows","3"),o.setAttribute("cols","20"),h.append(u,o);const C=document.createElement("div");A.setAttribute("for","dueDate"),A.textContent="Due Date: ",c.setAttribute("type","date"),c.setAttribute("name","dueDate"),C.append(A,c);const g=document.createElement("div");m.setAttribute("for","priority"),m.textContent="Priority: ",a.setAttribute("name","priority"),i.setAttribute("value","highPriority"),i.textContent="High",d.setAttribute("value","medPriority"),d.textContent="Medium",s.setAttribute("value","lowPriority"),s.textContent="Low",a.append(i,d,s),g.append(m,a),p.addEventListener("click",b),p.textContent="Add To-Do",n.append(f,h,C,g,p),t.appendChild(n),e.appendChild(t)}(),function(e){new C,e.itemArr.forEach((t=>{const n=new Image(20,20);n.src=v,n.addEventListener("click",(()=>{e.removeToDo(t),E(e)}));const r=document.getElementById("content"),o=document.createElement("div");o.setAttribute("class","toDoItem");const c=document.createElement("h2");c.textContent=t.title;const a=document.createElement("h2");a.textContent=t.description;const i=document.createElement("h2");i.textContent=t.dueDate;const d=document.createElement("h2");d.textContent=t.priority,o.append(c,a,i,d,n),r.appendChild(o)}))}(e)}function b(e){e.preventDefault();const t=new C,n=new FormData(e.target.form);!function(e,t){e.addToDo(t)}(t.getCurrentProject(),new h(n.get("title"),n.get("description"),n.get("dueDate"),n.get("priority"))),E(t.getCurrentProject()),e.target.form.reset()}(function(){const e=new C,t=new f("Main");e.addProject(t);const n=document.createElement("div"),r=document.createElement("h3");r.textContent=t.projectName,n.setAttribute("id","selectedProject"),n.setAttribute("class","defaultProject"),n.addEventListener("click",(()=>{document.querySelector("#selectedProject").removeAttribute("id"),w(t),document.getElementById("sideBar").children[0].setAttribute("id","selectedProject"),E(t)})),n.appendChild(r),document.getElementById("sideBar").appendChild(n),E(t)})(),j(),function(){const e=document.getElementById("sideBar"),t=document.createElement("button");t.textContent="New Project",t.addEventListener("click",g),e.appendChild(t)}();const y=e=>{const t=new C;t.addProject(new f(e)),B(),j(),0!==t.getCurrentProjectIndex()&&document.getElementById("sideBar").children[1+t.getCurrentProjectIndex()].setAttribute("id","selectedProject")};function B(){document.querySelectorAll(".projects").forEach((e=>e.remove()))}function j(){const e=new C;e.getProjects().forEach((t=>{if("Main"===t.projectName)return;const n=document.createElement("div"),r=new Image(20,20);r.src=v,r.addEventListener("click",(n=>{e.removeProject(t),n.target.parentElement.hasAttribute("id")?(w(e.getProjects()[0]),E(e.getProjects()[0]),document.querySelector(".defaultProject").setAttribute("id","selectedProject"),B(),j()):(B(),j(),0!==e.getCurrentProjectIndex()&&document.getElementById("sideBar").children[1+e.getCurrentProjectIndex()].setAttribute("id","selectedProject"))}));const o=document.createElement("h3");o.textContent=t.projectName,n.setAttribute("class","projects"),o.addEventListener("click",(()=>{document.querySelector("#selectedProject").removeAttribute("id"),w(t),0!==e.getCurrentProjectIndex()&&document.getElementById("sideBar").children[1+e.getCurrentProjectIndex()].setAttribute("id","selectedProject"),E(t)})),n.append(o,r),document.getElementById("sideBar").appendChild(n)}))}function w(e){(new C).setCurrentProject(e)}})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LEVBQXVCMUgsR0FHa0IsSUFBdENtRixFQUFTYiwwQkFDVmhGLFNBQVN1RyxlQUFlLFdBQVc4QixTQUFTLEVBQUV4QyxFQUFTYiwwQkFBMEJoRSxhQUFhLEtBQUssbUJBRXJHc0YsRUFBZ0I1RixFQUFPLElBRXpCMkUsRUFBSWUsT0FBTzhCLEVBQUlQLEdBRUMzSCxTQUFTdUcsZUFBZSxXQUNoQzlGLFlBQVk0RSxFQUFJLEdBRTVCLENBR0EsU0FBUytDLEVBQXVCbkUsSUFDYixJQUFJVSxHQUNaTSxrQkFBa0JoQixFQUM3QixDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdG9kb2xpc3Rwcm9qZWN0Ly4vc3JjL3N0eWxlcy5jc3MiLCJ3ZWJwYWNrOi8vdG9kb2xpc3Rwcm9qZWN0Ly4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIsIndlYnBhY2s6Ly90b2RvbGlzdHByb2plY3QvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qcyIsIndlYnBhY2s6Ly90b2RvbGlzdHByb2plY3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJ3ZWJwYWNrOi8vdG9kb2xpc3Rwcm9qZWN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qcyIsIndlYnBhY2s6Ly90b2RvbGlzdHByb2plY3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanMiLCJ3ZWJwYWNrOi8vdG9kb2xpc3Rwcm9qZWN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzIiwid2VicGFjazovL3RvZG9saXN0cHJvamVjdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzIiwid2VicGFjazovL3RvZG9saXN0cHJvamVjdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzIiwid2VicGFjazovL3RvZG9saXN0cHJvamVjdC93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly90b2RvbGlzdHByb2plY3Qvd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQiLCJ3ZWJwYWNrOi8vdG9kb2xpc3Rwcm9qZWN0L3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly90b2RvbGlzdHByb2plY3Qvd2VicGFjay9ydW50aW1lL2dsb2JhbCIsIndlYnBhY2s6Ly90b2RvbGlzdHByb2plY3Qvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly90b2RvbGlzdHByb2plY3Qvd2VicGFjay9ydW50aW1lL3B1YmxpY1BhdGgiLCJ3ZWJwYWNrOi8vdG9kb2xpc3Rwcm9qZWN0L3dlYnBhY2svcnVudGltZS9ub25jZSIsIndlYnBhY2s6Ly90b2RvbGlzdHByb2plY3QvLi9zcmMvc3R5bGVzLmNzcz80NGIyIiwid2VicGFjazovL3RvZG9saXN0cHJvamVjdC8uL3NyYy90b0RvQ2xhc3Nlcy5qcyIsIndlYnBhY2s6Ly90b2RvbGlzdHByb2plY3QvLi9zcmMvbmV3UHJvamVjdE92ZXJsYXkuanMiLCJ3ZWJwYWNrOi8vdG9kb2xpc3Rwcm9qZWN0Ly4vc3JjL2ltZ3MvdHJhc2guc3ZnIiwid2VicGFjazovL3RvZG9saXN0cHJvamVjdC8uL3NyYy9jb250ZW50LmpzIiwid2VicGFjazovL3RvZG9saXN0cHJvamVjdC8uL3NyYy9uZXdUb0RvRm9ybS5qcyIsIndlYnBhY2s6Ly90b2RvbGlzdHByb2plY3QvLi9zcmMvc2lkZUJhci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBgaHRtbCB7XHJcbiAgaGVpZ2h0OiAxMDB2aDtcclxuICB3aWR0aDogMTAwdnc7XHJcbn1cclxuYm9keSB7XHJcbiAgbWFyZ2luOjA7XHJcbiAgZGlzcGxheTogZ3JpZDtcclxuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCg0LCAyNXZ3KTtcclxuICBncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdCg1LCAyMHZoKTtcclxuICBncmlkLXRlbXBsYXRlLWFyZWFzOiBcclxuICAgIFwiaGVhZGVyIGhlYWRlciBoZWFkZXIgaGVhZGVyXCJcclxuICAgIFwic2lkZUJhciBjb250ZW50IGNvbnRlbnQgY29udGVudFwiXHJcbiAgICBcInNpZGVCYXIgY29udGVudCBjb250ZW50IGNvbnRlbnRcIlxyXG4gICAgXCJzaWRlQmFyIGNvbnRlbnQgY29udGVudCBjb250ZW50XCJcclxuICAgIFwic2lkZUJhciBjb250ZW50IGNvbnRlbnQgY29udGVudFwiO1xyXG59XHJcbiNoZWFkZXIge1xyXG4gIGdyaWQtYXJlYTogaGVhZGVyO1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHJlZDtcclxufVxyXG4jc2lkZUJhciB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIGdyaWQtYXJlYTogc2lkZUJhcjtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiBibHVlO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn1cclxuI3NpZGVCYXIgYnV0dG9uIHtcclxuICB3aWR0aDogMTV2dztcclxuICBoZWlnaHQ6NXZoO1xyXG59XHJcbiNjb250ZW50IHtcclxuICBncmlkLWFyZWE6IGNvbnRlbnQ7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogZ3JlZW47XHJcbn1cclxuLnRvRG9JdGVtIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGdhcDozdnc7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRjb3JhbDtcclxuICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn1cclxuI2FkZFRvRG8ge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbn1cclxuI2FkZFRvRG8gZm9ybSB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRncmVlbjtcclxuICBwYWRkaW5nLXJpZ2h0OiAzdnc7XHJcbiAgcGFkZGluZy1sZWZ0OiAzdnc7XHJcbiAgcGFkZGluZy1ib3R0b206IDF2aDtcclxuICBwYWRkaW5nLXRvcDogMXZoO1xyXG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbiAgZ2FwOiAzdnc7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxufVxyXG4jYWRkVG9EbyBmb3JtIGRpdiB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG59XHJcbiNhZGRUb0RvIGZvcm0gYnV0dG9uIHtcclxuICBhbGlnbi1zZWxmOiBjZW50ZXI7XHJcbiAgd2lkdGg6IDV2dztcclxuICBoZWlnaHQ6IDR2aDtcclxufVxyXG4jbmV3UHJvamVjdE92ZXJsYXkge1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICBoZWlnaHQ6IDEwMHZoO1xyXG4gIHdpZHRoOiAxMDB2dztcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLDAsMCwuNyk7XHJcbn1cclxuI25ld1Byb2plY3RPdmVybGF5IGZvcm0ge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxufVxyXG4jbmV3UHJvamVjdE92ZXJsYXkgYnV0dG9uIHtcclxuICB3aWR0aDogMTV2dztcclxuICBoZWlnaHQ6IDN2aDtcclxufVxyXG4ucHJvamVjdHMge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxufVxyXG4jc2VsZWN0ZWRQcm9qZWN0IHtcclxuICBib3JkZXItc3R5bGU6IGluc2V0O1xyXG59YCwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvc3R5bGVzLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtFQUNFLGFBQWE7RUFDYixZQUFZO0FBQ2Q7QUFDQTtFQUNFLFFBQVE7RUFDUixhQUFhO0VBQ2Isc0NBQXNDO0VBQ3RDLG1DQUFtQztFQUNuQzs7Ozs7cUNBS21DO0FBQ3JDO0FBQ0E7RUFDRSxpQkFBaUI7RUFDakIscUJBQXFCO0FBQ3ZCO0FBQ0E7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLGtCQUFrQjtFQUNsQixzQkFBc0I7RUFDdEIsbUJBQW1CO0FBQ3JCO0FBQ0E7RUFDRSxXQUFXO0VBQ1gsVUFBVTtBQUNaO0FBQ0E7RUFDRSxrQkFBa0I7RUFDbEIsdUJBQXVCO0FBQ3pCO0FBQ0E7RUFDRSxhQUFhO0VBQ2IsT0FBTztFQUNQLDRCQUE0QjtFQUM1QixtQkFBbUI7RUFDbkIsbUJBQW1CO0FBQ3JCO0FBQ0E7RUFDRSxhQUFhO0FBQ2Y7QUFDQTtFQUNFLDRCQUE0QjtFQUM1QixrQkFBa0I7RUFDbEIsaUJBQWlCO0VBQ2pCLG1CQUFtQjtFQUNuQixnQkFBZ0I7RUFDaEIsbUJBQW1CO0VBQ25CLFFBQVE7RUFDUixhQUFhO0VBQ2IsdUJBQXVCO0FBQ3pCO0FBQ0E7RUFDRSxhQUFhO0VBQ2IsdUJBQXVCO0VBQ3ZCLHNCQUFzQjtBQUN4QjtBQUNBO0VBQ0Usa0JBQWtCO0VBQ2xCLFVBQVU7RUFDVixXQUFXO0FBQ2I7QUFDQTtFQUNFLGtCQUFrQjtFQUNsQixhQUFhO0VBQ2IsWUFBWTtFQUNaLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIsdUJBQXVCO0VBQ3ZCLGdDQUFnQztBQUNsQztBQUNBO0VBQ0UsYUFBYTtFQUNiLHNCQUFzQjtBQUN4QjtBQUNBO0VBQ0UsV0FBVztFQUNYLFdBQVc7QUFDYjtBQUNBO0VBQ0UsYUFBYTtFQUNiLG1CQUFtQjtBQUNyQjtBQUNBO0VBQ0UsbUJBQW1CO0FBQ3JCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcImh0bWwge1xcclxcbiAgaGVpZ2h0OiAxMDB2aDtcXHJcXG4gIHdpZHRoOiAxMDB2dztcXHJcXG59XFxyXFxuYm9keSB7XFxyXFxuICBtYXJnaW46MDtcXHJcXG4gIGRpc3BsYXk6IGdyaWQ7XFxyXFxuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCg0LCAyNXZ3KTtcXHJcXG4gIGdyaWQtdGVtcGxhdGUtcm93czogcmVwZWF0KDUsIDIwdmgpO1xcclxcbiAgZ3JpZC10ZW1wbGF0ZS1hcmVhczogXFxyXFxuICAgIFxcXCJoZWFkZXIgaGVhZGVyIGhlYWRlciBoZWFkZXJcXFwiXFxyXFxuICAgIFxcXCJzaWRlQmFyIGNvbnRlbnQgY29udGVudCBjb250ZW50XFxcIlxcclxcbiAgICBcXFwic2lkZUJhciBjb250ZW50IGNvbnRlbnQgY29udGVudFxcXCJcXHJcXG4gICAgXFxcInNpZGVCYXIgY29udGVudCBjb250ZW50IGNvbnRlbnRcXFwiXFxyXFxuICAgIFxcXCJzaWRlQmFyIGNvbnRlbnQgY29udGVudCBjb250ZW50XFxcIjtcXHJcXG59XFxyXFxuI2hlYWRlciB7XFxyXFxuICBncmlkLWFyZWE6IGhlYWRlcjtcXHJcXG4gIGJhY2tncm91bmQtY29sb3I6IHJlZDtcXHJcXG59XFxyXFxuI3NpZGVCYXIge1xcclxcbiAgZGlzcGxheTogZmxleDtcXHJcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxyXFxuICBncmlkLWFyZWE6IHNpZGVCYXI7XFxyXFxuICBiYWNrZ3JvdW5kLWNvbG9yOiBibHVlO1xcclxcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG59XFxyXFxuI3NpZGVCYXIgYnV0dG9uIHtcXHJcXG4gIHdpZHRoOiAxNXZ3O1xcclxcbiAgaGVpZ2h0OjV2aDtcXHJcXG59XFxyXFxuI2NvbnRlbnQge1xcclxcbiAgZ3JpZC1hcmVhOiBjb250ZW50O1xcclxcbiAgYmFja2dyb3VuZC1jb2xvcjogZ3JlZW47XFxyXFxufVxcclxcbi50b0RvSXRlbSB7XFxyXFxuICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgZ2FwOjN2dztcXHJcXG4gIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0Y29yYWw7XFxyXFxuICBib3JkZXItcmFkaXVzOiAxMHB4O1xcclxcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG59XFxyXFxuI2FkZFRvRG8ge1xcclxcbiAgZGlzcGxheTogZmxleDtcXHJcXG59XFxyXFxuI2FkZFRvRG8gZm9ybSB7XFxyXFxuICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGdyZWVuO1xcclxcbiAgcGFkZGluZy1yaWdodDogM3Z3O1xcclxcbiAgcGFkZGluZy1sZWZ0OiAzdnc7XFxyXFxuICBwYWRkaW5nLWJvdHRvbTogMXZoO1xcclxcbiAgcGFkZGluZy10b3A6IDF2aDtcXHJcXG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XFxyXFxuICBnYXA6IDN2dztcXHJcXG4gIGRpc3BsYXk6IGZsZXg7XFxyXFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXHJcXG59XFxyXFxuI2FkZFRvRG8gZm9ybSBkaXYge1xcclxcbiAgZGlzcGxheTogZmxleDtcXHJcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcclxcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXHJcXG59XFxyXFxuI2FkZFRvRG8gZm9ybSBidXR0b24ge1xcclxcbiAgYWxpZ24tc2VsZjogY2VudGVyO1xcclxcbiAgd2lkdGg6IDV2dztcXHJcXG4gIGhlaWdodDogNHZoO1xcclxcbn1cXHJcXG4jbmV3UHJvamVjdE92ZXJsYXkge1xcclxcbiAgcG9zaXRpb246IGFic29sdXRlO1xcclxcbiAgaGVpZ2h0OiAxMDB2aDtcXHJcXG4gIHdpZHRoOiAxMDB2dztcXHJcXG4gIGRpc3BsYXk6IGZsZXg7XFxyXFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxyXFxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsMCwwLC43KTtcXHJcXG59XFxyXFxuI25ld1Byb2plY3RPdmVybGF5IGZvcm0ge1xcclxcbiAgZGlzcGxheTogZmxleDtcXHJcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxyXFxufVxcclxcbiNuZXdQcm9qZWN0T3ZlcmxheSBidXR0b24ge1xcclxcbiAgd2lkdGg6IDE1dnc7XFxyXFxuICBoZWlnaHQ6IDN2aDtcXHJcXG59XFxyXFxuLnByb2plY3RzIHtcXHJcXG4gIGRpc3BsYXk6IGZsZXg7XFxyXFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbn1cXHJcXG4jc2VsZWN0ZWRQcm9qZWN0IHtcXHJcXG4gIGJvcmRlci1zdHlsZTogaW5zZXQ7XFxyXFxufVwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcpIHtcbiAgdmFyIGxpc3QgPSBbXTtcblxuICAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gXCJcIjtcbiAgICAgIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2YgaXRlbVs1XSAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGNvbnRlbnQgKz0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKTtcbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTtcblxuICAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICBsaXN0LmkgPSBmdW5jdGlvbiBpKG1vZHVsZXMsIG1lZGlhLCBkZWR1cGUsIHN1cHBvcnRzLCBsYXllcikge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgdW5kZWZpbmVkXV07XG4gICAgfVxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCB0aGlzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgIHZhciBpZCA9IHRoaXNba11bMF07XG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIGZvciAodmFyIF9rID0gMDsgX2sgPCBtb2R1bGVzLmxlbmd0aDsgX2srKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfa10pO1xuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgaWYgKHR5cGVvZiBsYXllciAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBpZiAodHlwZW9mIGl0ZW1bNV0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChtZWRpYSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoc3VwcG9ydHMpIHtcbiAgICAgICAgaWYgKCFpdGVtWzRdKSB7XG4gICAgICAgICAgaXRlbVs0XSA9IFwiXCIuY29uY2F0KHN1cHBvcnRzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNF0gPSBzdXBwb3J0cztcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIGxpc3Q7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdGVtKSB7XG4gIHZhciBjb250ZW50ID0gaXRlbVsxXTtcbiAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuICBpZiAodHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShjc3NNYXBwaW5nKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSBcIi8qIyBcIi5jb25jYXQoZGF0YSwgXCIgKi9cIik7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKFwiXFxuXCIpO1xuICB9XG4gIHJldHVybiBbY29udGVudF0uam9pbihcIlxcblwiKTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBzdHlsZXNJbkRPTSA9IFtdO1xuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzSW5ET00ubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoc3R5bGVzSW5ET01baV0uaWRlbnRpZmllciA9PT0gaWRlbnRpZmllcikge1xuICAgICAgcmVzdWx0ID0gaTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuICAgIHZhciBpdGVtID0gbGlzdFtpXTtcbiAgICB2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcbiAgICB2YXIgY291bnQgPSBpZENvdW50TWFwW2lkXSB8fCAwO1xuICAgIHZhciBpZGVudGlmaWVyID0gXCJcIi5jb25jYXQoaWQsIFwiIFwiKS5jb25jYXQoY291bnQpO1xuICAgIGlkQ291bnRNYXBbaWRdID0gY291bnQgKyAxO1xuICAgIHZhciBpbmRleEJ5SWRlbnRpZmllciA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgIHZhciBvYmogPSB7XG4gICAgICBjc3M6IGl0ZW1bMV0sXG4gICAgICBtZWRpYTogaXRlbVsyXSxcbiAgICAgIHNvdXJjZU1hcDogaXRlbVszXSxcbiAgICAgIHN1cHBvcnRzOiBpdGVtWzRdLFxuICAgICAgbGF5ZXI6IGl0ZW1bNV1cbiAgICB9O1xuICAgIGlmIChpbmRleEJ5SWRlbnRpZmllciAhPT0gLTEpIHtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS5yZWZlcmVuY2VzKys7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0udXBkYXRlcihvYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgdXBkYXRlciA9IGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpO1xuICAgICAgb3B0aW9ucy5ieUluZGV4ID0gaTtcbiAgICAgIHN0eWxlc0luRE9NLnNwbGljZShpLCAwLCB7XG4gICAgICAgIGlkZW50aWZpZXI6IGlkZW50aWZpZXIsXG4gICAgICAgIHVwZGF0ZXI6IHVwZGF0ZXIsXG4gICAgICAgIHJlZmVyZW5jZXM6IDFcbiAgICAgIH0pO1xuICAgIH1cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG4gIHJldHVybiBpZGVudGlmaWVycztcbn1cbmZ1bmN0aW9uIGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpIHtcbiAgdmFyIGFwaSA9IG9wdGlvbnMuZG9tQVBJKG9wdGlvbnMpO1xuICBhcGkudXBkYXRlKG9iaik7XG4gIHZhciB1cGRhdGVyID0gZnVuY3Rpb24gdXBkYXRlcihuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwICYmIG5ld09iai5zdXBwb3J0cyA9PT0gb2JqLnN1cHBvcnRzICYmIG5ld09iai5sYXllciA9PT0gb2JqLmxheWVyKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGFwaS51cGRhdGUob2JqID0gbmV3T2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbW92ZSgpO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIHVwZGF0ZXI7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW2ldO1xuICAgICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleF0ucmVmZXJlbmNlcy0tO1xuICAgIH1cbiAgICB2YXIgbmV3TGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKG5ld0xpc3QsIG9wdGlvbnMpO1xuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuICAgICAgdmFyIF9pbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKF9pZGVudGlmaWVyKTtcbiAgICAgIGlmIChzdHlsZXNJbkRPTVtfaW5kZXhdLnJlZmVyZW5jZXMgPT09IDApIHtcbiAgICAgICAgc3R5bGVzSW5ET01bX2luZGV4XS51cGRhdGVyKCk7XG4gICAgICAgIHN0eWxlc0luRE9NLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cbiAgICBsYXN0SWRlbnRpZmllcnMgPSBuZXdMYXN0SWRlbnRpZmllcnM7XG4gIH07XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgbWVtbyA9IHt9O1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGdldFRhcmdldCh0YXJnZXQpIHtcbiAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7XG5cbiAgICAvLyBTcGVjaWFsIGNhc2UgdG8gcmV0dXJuIGhlYWQgb2YgaWZyYW1lIGluc3RlYWQgb2YgaWZyYW1lIGl0c2VsZlxuICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG4gICAgbWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG4gIH1cbiAgcmV0dXJuIG1lbW9bdGFyZ2V0XTtcbn1cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRCeVNlbGVjdG9yKGluc2VydCwgc3R5bGUpIHtcbiAgdmFyIHRhcmdldCA9IGdldFRhcmdldChpbnNlcnQpO1xuICBpZiAoIXRhcmdldCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gIH1cbiAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbn1cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0QnlTZWxlY3RvcjsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgb3B0aW9ucy5zZXRBdHRyaWJ1dGVzKGVsZW1lbnQsIG9wdGlvbnMuYXR0cmlidXRlcyk7XG4gIG9wdGlvbnMuaW5zZXJ0KGVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG4gIHJldHVybiBlbGVtZW50O1xufVxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzKHN0eWxlRWxlbWVudCkge1xuICB2YXIgbm9uY2UgPSB0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09IFwidW5kZWZpbmVkXCIgPyBfX3dlYnBhY2tfbm9uY2VfXyA6IG51bGw7XG4gIGlmIChub25jZSkge1xuICAgIHN0eWxlRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJub25jZVwiLCBub25jZSk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBcIlwiO1xuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQob2JqLnN1cHBvcnRzLCBcIikge1wiKTtcbiAgfVxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwiQG1lZGlhIFwiLmNvbmNhdChvYmoubWVkaWEsIFwiIHtcIik7XG4gIH1cbiAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBvYmoubGF5ZXIgIT09IFwidW5kZWZpbmVkXCI7XG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJAbGF5ZXJcIi5jb25jYXQob2JqLmxheWVyLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQob2JqLmxheWVyKSA6IFwiXCIsIFwiIHtcIik7XG4gIH1cbiAgY3NzICs9IG9iai5jc3M7XG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgY3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIi5jb25jYXQoYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSwgXCIgKi9cIik7XG4gIH1cblxuICAvLyBGb3Igb2xkIElFXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbn1cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpIHtcbiAgLy8gaXN0YW5idWwgaWdub3JlIGlmXG4gIGlmIChzdHlsZUVsZW1lbnQucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBzdHlsZUVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQpO1xufVxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGRvbUFQSShvcHRpb25zKSB7XG4gIGlmICh0eXBlb2YgZG9jdW1lbnQgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICByZXR1cm4ge1xuICAgICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUoKSB7fSxcbiAgICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge31cbiAgICB9O1xuICB9XG4gIHZhciBzdHlsZUVsZW1lbnQgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XG4gICAgfVxuICB9O1xufVxubW9kdWxlLmV4cG9ydHMgPSBkb21BUEk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQpIHtcbiAgaWYgKHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpIHtcbiAgICAgIHN0eWxlRWxlbWVudC5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCk7XG4gICAgfVxuICAgIHN0eWxlRWxlbWVudC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBzdHlsZVRhZ1RyYW5zZm9ybTsiLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdGlkOiBtb2R1bGVJZCxcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIiwiLy8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbl9fd2VicGFja19yZXF1aXJlX18ubiA9IChtb2R1bGUpID0+IHtcblx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG5cdFx0KCkgPT4gKG1vZHVsZVsnZGVmYXVsdCddKSA6XG5cdFx0KCkgPT4gKG1vZHVsZSk7XG5cdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsIHsgYTogZ2V0dGVyIH0pO1xuXHRyZXR1cm4gZ2V0dGVyO1xufTsiLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmcgPSAoZnVuY3Rpb24oKSB7XG5cdGlmICh0eXBlb2YgZ2xvYmFsVGhpcyA9PT0gJ29iamVjdCcpIHJldHVybiBnbG9iYWxUaGlzO1xuXHR0cnkge1xuXHRcdHJldHVybiB0aGlzIHx8IG5ldyBGdW5jdGlvbigncmV0dXJuIHRoaXMnKSgpO1xuXHR9IGNhdGNoIChlKSB7XG5cdFx0aWYgKHR5cGVvZiB3aW5kb3cgPT09ICdvYmplY3QnKSByZXR1cm4gd2luZG93O1xuXHR9XG59KSgpOyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCJ2YXIgc2NyaXB0VXJsO1xuaWYgKF9fd2VicGFja19yZXF1aXJlX18uZy5pbXBvcnRTY3JpcHRzKSBzY3JpcHRVcmwgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcubG9jYXRpb24gKyBcIlwiO1xudmFyIGRvY3VtZW50ID0gX193ZWJwYWNrX3JlcXVpcmVfXy5nLmRvY3VtZW50O1xuaWYgKCFzY3JpcHRVcmwgJiYgZG9jdW1lbnQpIHtcblx0aWYgKGRvY3VtZW50LmN1cnJlbnRTY3JpcHQpXG5cdFx0c2NyaXB0VXJsID0gZG9jdW1lbnQuY3VycmVudFNjcmlwdC5zcmM7XG5cdGlmICghc2NyaXB0VXJsKSB7XG5cdFx0dmFyIHNjcmlwdHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcInNjcmlwdFwiKTtcblx0XHRpZihzY3JpcHRzLmxlbmd0aCkge1xuXHRcdFx0dmFyIGkgPSBzY3JpcHRzLmxlbmd0aCAtIDE7XG5cdFx0XHR3aGlsZSAoaSA+IC0xICYmICFzY3JpcHRVcmwpIHNjcmlwdFVybCA9IHNjcmlwdHNbaS0tXS5zcmM7XG5cdFx0fVxuXHR9XG59XG4vLyBXaGVuIHN1cHBvcnRpbmcgYnJvd3NlcnMgd2hlcmUgYW4gYXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCB5b3UgbXVzdCBzcGVjaWZ5IGFuIG91dHB1dC5wdWJsaWNQYXRoIG1hbnVhbGx5IHZpYSBjb25maWd1cmF0aW9uXG4vLyBvciBwYXNzIGFuIGVtcHR5IHN0cmluZyAoXCJcIikgYW5kIHNldCB0aGUgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gdmFyaWFibGUgZnJvbSB5b3VyIGNvZGUgdG8gdXNlIHlvdXIgb3duIGxvZ2ljLlxuaWYgKCFzY3JpcHRVcmwpIHRocm93IG5ldyBFcnJvcihcIkF1dG9tYXRpYyBwdWJsaWNQYXRoIGlzIG5vdCBzdXBwb3J0ZWQgaW4gdGhpcyBicm93c2VyXCIpO1xuc2NyaXB0VXJsID0gc2NyaXB0VXJsLnJlcGxhY2UoLyMuKiQvLCBcIlwiKS5yZXBsYWNlKC9cXD8uKiQvLCBcIlwiKS5yZXBsYWNlKC9cXC9bXlxcL10rJC8sIFwiL1wiKTtcbl9fd2VicGFja19yZXF1aXJlX18ucCA9IHNjcmlwdFVybDsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm5jID0gdW5kZWZpbmVkOyIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZXMuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZXMuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiLy8gcHJvamVjdCBjbGFzcyBhbGxvd2luZyBmb3IgZGlmZmVyZW50IHByb2plY3QgcGFnZXMgZm9yIG91ciB0b0RvIGl0ZW1zXHJcbmV4cG9ydCBjbGFzcyBwcm9qZWN0IHtcclxuICBpdGVtQXJyID0gW107XHJcbiAgY29uc3RydWN0b3IocHJvamVjdE5hbWUpIHtcclxuICAgIHRoaXMucHJvamVjdE5hbWUgPSBwcm9qZWN0TmFtZTtcclxuICB9XHJcbiAgYWRkVG9Ebyh0b0RvSXRlbSkge1xyXG4gICAgdGhpcy5pdGVtQXJyLnB1c2godG9Eb0l0ZW0pO1xyXG4gIH1cclxuICByZW1vdmVUb0RvKHRvRG9JdGVtKSB7XHJcbiAgICB0aGlzLml0ZW1BcnIgPSB0aGlzLml0ZW1BcnIuZmlsdGVyKGl0ZW0gPT4gaXRlbS5rZXkgIT09IHRvRG9JdGVtLmtleSk7XHJcbiAgfVxyXG59XHJcblxyXG4vLyB0b0RvSXRlbSBjbGFzcyBhbGxvd2luZyB0byBjcmVhdGUgb3VyIHRvRG8nc1xyXG5leHBvcnQgY2xhc3MgdG9Eb0l0ZW0ge1xyXG4gIHN0YXRpYyAjbGFzdEtleSA9IDA7XHJcbiAgY29uc3RydWN0b3IodGl0bGUsIGRlc2NyaXB0aW9uLCBkdWVEYXRlLCBwcmlvcml0eSkge1xyXG4gICAgdGhpcy5rZXkgPSB0b0RvSXRlbS4jbGFzdEtleSsrO1xyXG4gICAgdGhpcy50aXRsZSA9IHRpdGxlO1xyXG4gICAgdGhpcy5kZXNjcmlwdGlvbiA9IGRlc2NyaXB0aW9uO1xyXG4gICAgdGhpcy5kdWVEYXRlID0gZHVlRGF0ZTtcclxuICAgIHRoaXMucHJpb3JpdHkgPSBwcmlvcml0eTtcclxuICB9XHJcbn1cclxuXHJcbi8vIGNsYXNzIHN0b3JpbmcgYWxsIHRoZSBwcm9qZWN0IGNsYXNzIGluc3RhbmNlc1xyXG5leHBvcnQgY2xhc3MgYWxsUHJvamVjdHMge1xyXG4gIHN0YXRpYyAjcHJvamVjdEFycmF5ID0gW11cclxuICBzdGF0aWMgI2N1cnJlbnRQcm9qZWN0TmFtZSA9IFwiTWFpblwiO1xyXG4gIGFkZFByb2plY3QocHJvamVjdCkge1xyXG4gICAgYWxsUHJvamVjdHMuI3Byb2plY3RBcnJheS5wdXNoKHByb2plY3QpO1xyXG4gIH1cclxuICByZW1vdmVQcm9qZWN0KHByb2plY3QpIHtcclxuICAgIGFsbFByb2plY3RzLiNwcm9qZWN0QXJyYXkgPSBhbGxQcm9qZWN0cy4jcHJvamVjdEFycmF5LmZpbHRlcihpdGVtID0+IGl0ZW0ucHJvamVjdE5hbWUgIT09IHByb2plY3QucHJvamVjdE5hbWUpO1xyXG4gIH1cclxuICBnZXRQcm9qZWN0cygpIHtcclxuICAgIHJldHVybiBhbGxQcm9qZWN0cy4jcHJvamVjdEFycmF5O1xyXG4gIH1cclxuICBnZXRDdXJyZW50UHJvamVjdCgpIHtcclxuICAgIGZvcihsZXQgaSA9IDA7aTxhbGxQcm9qZWN0cy4jcHJvamVjdEFycmF5Lmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgIGlmKGFsbFByb2plY3RzLiNwcm9qZWN0QXJyYXlbaV0ucHJvamVjdE5hbWUgPT09IGFsbFByb2plY3RzLiNjdXJyZW50UHJvamVjdE5hbWUpIHtcclxuICAgICAgICByZXR1cm4gYWxsUHJvamVjdHMuI3Byb2plY3RBcnJheVtpXTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuICBnZXRDdXJyZW50UHJvamVjdEluZGV4KCkge1xyXG4gICAgZm9yKGxldCBpID0gMDtpPGFsbFByb2plY3RzLiNwcm9qZWN0QXJyYXkubGVuZ3RoOyBpKyspIHtcclxuICAgICAgaWYoYWxsUHJvamVjdHMuI3Byb2plY3RBcnJheVtpXS5wcm9qZWN0TmFtZSA9PT0gYWxsUHJvamVjdHMuI2N1cnJlbnRQcm9qZWN0TmFtZSkge1xyXG4gICAgICAgIHJldHVybiBpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG4gIHNldEN1cnJlbnRQcm9qZWN0KHByb2plY3QpIHtcclxuICAgIGFsbFByb2plY3RzLiNjdXJyZW50UHJvamVjdE5hbWUgPSBwcm9qZWN0LnByb2plY3ROYW1lO1xyXG4gIH1cclxuICBpbmNsdWRlc1Byb2plY3QocHJvamVjdE5hbWUpIHtcclxuICAgIGlmKGFsbFByb2plY3RzLiNwcm9qZWN0QXJyYXkuZmluZChlbGVtZW50ID0+IGVsZW1lbnQucHJvamVjdE5hbWUgPT09IHByb2plY3ROYW1lKSAhPSB1bmRlZmluZWQpIHtcclxuICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9XHJcbiAgfVxyXG59IiwiaW1wb3J0IHsgaW5pdGlhbGl6ZU5ld1Byb2plY3QgfSBmcm9tIFwiLi9zaWRlQmFyLmpzXCI7XHJcbmltcG9ydCB7IGFsbFByb2plY3RzIH0gZnJvbSBcIi4vdG9Eb0NsYXNzZXMuanNcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG5ld1Byb2plY3RPdmVybGF5KCkge1xyXG4gIC8vIG92ZXJsYXkgZWxlbWVudHNcclxuICBjb25zdCBkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xyXG4gIC8vZm9ybSBlbGVtZW50c1xyXG4gIGNvbnN0IGZvcm0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZm9ybVwiKTtcclxuICBjb25zdCBpbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKTtcclxuICBjb25zdCBsYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJsYWJlbFwiKTtcclxuICBjb25zdCBzdWJtaXRCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xyXG4gIGNvbnN0IGNsb3NlRm9ybUJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIik7XHJcblxyXG4gIC8vZGl2IGVsZW1lbnQgYXR0cmlidXRlc1xyXG4gIGRpdi5zZXRBdHRyaWJ1dGUoXCJpZFwiLFwibmV3UHJvamVjdE92ZXJsYXlcIik7XHJcblxyXG4gIC8vaW5wdXQgZWxlbWVudCBhdHRyaWJ1dGVzXHJcbiAgaW5wdXQuc2V0QXR0cmlidXRlKFwidHlwZVwiLFwidGV4dFwiKTtcclxuICBpbnB1dC5zZXRBdHRyaWJ1dGUoXCJuYW1lXCIsXCJwcm9qZWN0TmFtZVwiKTtcclxuXHJcbiAgLy9sYWJlbCBlbGVtZW50IGF0dHJpYnV0ZXNcclxuICBsYWJlbC5zZXRBdHRyaWJ1dGUoXCJmb3JcIixcInByb2plY3ROYW1lXCIpO1xyXG4gIGxhYmVsLnRleHRDb250ZW50ID0gXCJFbnRlciBwcm9qZWN0IG5hbWU6IFwiO1xyXG5cclxuICAvLyBidXR0b24gYXR0cmlidXRlc1xyXG4gIHN1Ym1pdEJ1dHRvbi50ZXh0Q29udGVudCA9IFwiU3VibWl0XCI7XHJcbiAgc3VibWl0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLChlKSA9PiB7XHJcbiAgICBjb25zdCBwcm9qZWN0cyA9IG5ldyBhbGxQcm9qZWN0cygpO1xyXG4gICAgLy8gZW5zdXJlIHByb2plY3QgbmFtZSBpc250IGVtcHR5XHJcbiAgICBpZihpbnB1dC52YWx1ZS50cmltKCkubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgYWxlcnQoXCJQcm9qZWN0IG5hbWUgY2Fubm90IGJlIGVtcHR5IVwiKTtcclxuICAgIH0gLy8gY2hlY2sgdG8gcHJldmVudCBkdXBsaWNhdGUgcHJvamVjdCBuYW1lcyBcclxuICAgIGVsc2UgaWYocHJvamVjdHMuaW5jbHVkZXNQcm9qZWN0KGlucHV0LnZhbHVlKSkge1xyXG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgIGFsZXJ0KFwiQ2FuIG5vdCBoYXZlIGR1cGxpY2F0ZSBwcm9qZWN0IVwiKTtcclxuICAgIH1cclxuICAgIGVsc2Uge1xyXG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgIGluaXRpYWxpemVOZXdQcm9qZWN0KGlucHV0LnZhbHVlKTtcclxuICAgICAgZm9ybS5yZXNldCgpO1xyXG4gICAgfVxyXG4gIH0pO1xyXG4gIGNsb3NlRm9ybUJ1dHRvbi50ZXh0Q29udGVudCA9IFwiQ2xvc2VcIjtcclxuICBjbG9zZUZvcm1CdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgIGRpdi5yZW1vdmUoKTtcclxuICB9KVxyXG5cclxuICBmb3JtLmFwcGVuZChsYWJlbCwgaW5wdXQsIHN1Ym1pdEJ1dHRvbiwgY2xvc2VGb3JtQnV0dG9uKTtcclxuICBkaXYuYXBwZW5kQ2hpbGQoZm9ybSk7XHJcbiAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChkaXYpO1xyXG59XHJcbiIsImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCI3NmUzN2QwOWI2ZDY1NWE2ZGY3NDc2MWE0ZGI1NDZmYS5zdmdcIjsiLCJpbXBvcnQgbmV3VG9Eb0Zvcm0gZnJvbSBcIi4vbmV3VG9Eb0Zvcm0uanNcIjtcclxuaW1wb3J0IHsgYWxsUHJvamVjdHMsIHRvRG9JdGVtIH0gZnJvbSBcIi4vdG9Eb0NsYXNzZXMuanNcIjtcclxuaW1wb3J0IHRyYXNoSW1nIGZyb20gXCIuL2ltZ3MvdHJhc2guc3ZnXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZW5lcmF0ZUNvbnRlbnQocHJvamVjdCkge1xyXG4gIGNsZWFyQ29udGVudCgpO1xyXG4gIG5ld1RvRG9Gb3JtKCk7XHJcbiAgdG9Eb0l0ZW1zKHByb2plY3QpO1xyXG59O1xyXG5cclxuLy9hZFRvRG8gdG8gcHJvamVjdCBjbGFzcyBpbnN0YW5jZVxyXG5mdW5jdGlvbiBhZGRUb0RvKHByb2plY3QsIHRvRG9JdGVtKSB7XHJcbiAgcHJvamVjdC5hZGRUb0RvKHRvRG9JdGVtKTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGZvcm1TdWJtaXQoZSkge1xyXG4gIGUucHJldmVudERlZmF1bHQoKTtcclxuICBjb25zdCBhbGxQcm9qZWN0PSBuZXcgYWxsUHJvamVjdHMoKTtcclxuICBjb25zdCBmb3JtRGF0YSA9IG5ldyBGb3JtRGF0YShlLnRhcmdldC5mb3JtKTtcclxuICBhZGRUb0RvKGFsbFByb2plY3QuZ2V0Q3VycmVudFByb2plY3QoKSwgbmV3IHRvRG9JdGVtKGZvcm1EYXRhLmdldChcInRpdGxlXCIpLCBmb3JtRGF0YS5nZXQoXCJkZXNjcmlwdGlvblwiKSwgZm9ybURhdGEuZ2V0KFwiZHVlRGF0ZVwiKSxmb3JtRGF0YS5nZXQoXCJwcmlvcml0eVwiKSkpO1xyXG4gIGdlbmVyYXRlQ29udGVudChhbGxQcm9qZWN0LmdldEN1cnJlbnRQcm9qZWN0KCkpO1xyXG4gIGUudGFyZ2V0LmZvcm0ucmVzZXQoKTtcclxufVxyXG5cclxuLy8gZGlzcGxheSB0b0RvSXRlbXMgaW4gY29udGVudCBhcmVhXHJcbmZ1bmN0aW9uIHRvRG9JdGVtcyhwcm9qZWN0KSB7XHJcbiAgY29uc3QgYWxsUHJvamVjdD0gbmV3IGFsbFByb2plY3RzKCk7XHJcbiAgcHJvamVjdC5pdGVtQXJyLmZvckVhY2goZWxlbWVudCA9PiB7XHJcbiAgICAvLyBkb20gZWxlbWVudCBmb3IgZWFjaCB0b2RvIGl0ZW0gZm9yIGEgcHJvamVjdFxyXG4gICAgY29uc3QgdHJhc2ggPSBuZXcgSW1hZ2UoMjAsMjApO1xyXG4gICAgdHJhc2guc3JjID0gdHJhc2hJbWc7XHJcbiAgICAvLyBldmVudCBsaXN0ZW5lciB0byBkZWxldGUgdG9kbyBpdGVtXHJcbiAgICB0cmFzaC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gICAgICBwcm9qZWN0LnJlbW92ZVRvRG8oZWxlbWVudCk7XHJcbiAgICAgIGdlbmVyYXRlQ29udGVudChwcm9qZWN0KTtcclxuICAgIH0pXHJcbiAgICBjb25zdCBjb250ZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjb250ZW50XCIpO1xyXG4gICAgY29uc3QgZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcclxuICAgIGRpdi5zZXRBdHRyaWJ1dGUoXCJjbGFzc1wiLCBcInRvRG9JdGVtXCIpO1xyXG4gICAgY29uc3QgdGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaDJcIik7XHJcbiAgICB0aXRsZS50ZXh0Q29udGVudCA9IGVsZW1lbnQudGl0bGU7XHJcbiAgICBjb25zdCBkZXNjcmlwdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJoMlwiKTtcclxuICAgIGRlc2NyaXB0aW9uLnRleHRDb250ZW50ID0gZWxlbWVudC5kZXNjcmlwdGlvbjtcclxuICAgIGNvbnN0IGR1ZURhdGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaDJcIik7XHJcbiAgICBkdWVEYXRlLnRleHRDb250ZW50ID0gZWxlbWVudC5kdWVEYXRlO1xyXG4gICAgY29uc3QgcHJpb3JpdHkgPSAgZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImgyXCIpO1xyXG4gICAgcHJpb3JpdHkudGV4dENvbnRlbnQgPSBlbGVtZW50LnByaW9yaXR5O1xyXG4gICAgZGl2LmFwcGVuZCh0aXRsZSwgZGVzY3JpcHRpb24sIGR1ZURhdGUsIHByaW9yaXR5LCB0cmFzaCk7XHJcbiAgICBjb250ZW50LmFwcGVuZENoaWxkKGRpdik7XHJcbiAgfSk7XHJcbn1cclxuXHJcbi8vIGNhbGxlZCBhZnRlciBlYWNoIG5ldyB0byBkbyBpdGVtIGFkZGVkIGFzIHRvIHByZXZlbnQgZHVwbGljYXRpb25cclxuZnVuY3Rpb24gY2xlYXJDb250ZW50KCkge1xyXG4gIGNvbnN0IGNvbnRlbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNvbnRlbnRcIik7XHJcbiAgY29udGVudC5yZXBsYWNlQ2hpbGRyZW4oKTtcclxufSIsImltcG9ydCB7IGZvcm1TdWJtaXQgfSBmcm9tIFwiLi9jb250ZW50LmpzXCI7XHJcblxyXG4vLyBnZW5lcmF0ZSB0b0RvRm9ybSBmb3IgZWFjaCBwcm9qZWN0XHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG5ld1RvRG9Gb3JtKCkge1xyXG4gIC8vIGVsZW1lbnRzXHJcbiAgY29uc3QgY29udGVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY29udGVudFwiKTtcclxuICBjb25zdCBkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xyXG4gIC8vZm9ybSBlbGVtZW50c1xyXG4gIGNvbnN0IGZvcm0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZm9ybVwiKTtcclxuICBjb25zdCBpbnB1dFRpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImlucHV0XCIpO1xyXG4gIGNvbnN0IHRleHRBcmVhID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInRleHRhcmVhXCIpO1xyXG4gIGNvbnN0IGlucHV0RGF0ZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKTtcclxuICBjb25zdCBzZWxlY3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic2VsZWN0XCIpO1xyXG4gIGNvbnN0IGhpZ2hQcmlvcml0eSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIik7XHJcbiAgY29uc3QgbWVkUHJpb3JpdHkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIpO1xyXG4gIGNvbnN0IGxvd1ByaW9yaXR5ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiKTtcclxuICBjb25zdCBsYWJlbFRpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxhYmVsXCIpO1xyXG4gIGNvbnN0IGxhYmVsRGVzY3JpcHRpb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGFiZWxcIik7XHJcbiAgY29uc3QgbGFiZWxEdWVEYXRlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxhYmVsXCIpO1xyXG4gIGNvbnN0IGxhYmVsUHJpb3JpdHkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGFiZWxcIik7XHJcbiAgY29uc3Qgc3VibWl0QnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcclxuXHJcbiAgLy9kaXYgZWxlbWVudCBhdHRyaWJ1dGVzXHJcbiAgZGl2LnNldEF0dHJpYnV0ZShcImlkXCIsXCJhZGRUb0RvXCIpO1xyXG5cclxuICAvL2lucHV0IGVsZW1lbnQgYXR0cmlidXRlcyBhbmQgbGFiZWwgZWxlbWVudCBhdHRyaWJ1dGVzXHJcbiAgLy8gdGl0bGUgZm9ybSBpbnB1dFxyXG4gIGNvbnN0IHRpdGxlRGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcclxuICBsYWJlbFRpdGxlLnNldEF0dHJpYnV0ZShcImZvclwiLFwidGl0bGVcIik7XHJcbiAgbGFiZWxUaXRsZS50ZXh0Q29udGVudCA9IFwiVGl0bGU6IFwiO1xyXG4gIGlucHV0VGl0bGUuc2V0QXR0cmlidXRlKFwidHlwZVwiLFwidGV4dFwiKTtcclxuICBpbnB1dFRpdGxlLnNldEF0dHJpYnV0ZShcIm5hbWVcIixcInRpdGxlXCIpO1xyXG4gIHRpdGxlRGl2LmFwcGVuZChsYWJlbFRpdGxlLGlucHV0VGl0bGUpO1xyXG5cclxuICAvL2Rlc2NyaXB0aW9uIGFyZWEgZm9yIGZvcm1cclxuICBjb25zdCBkZXNjRGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcclxuICBsYWJlbERlc2NyaXB0aW9uLnNldEF0dHJpYnV0ZShcImZvclwiLFwiZGVzY3JpcHRpb25cIik7XHJcbiAgbGFiZWxEZXNjcmlwdGlvbi50ZXh0Q29udGVudCA9IFwiRGVzY3JpcHRpb246IFwiO1xyXG4gIHRleHRBcmVhLnNldEF0dHJpYnV0ZShcIm5hbWVcIixcImRlc2NyaXB0aW9uXCIpO1xyXG4gIHRleHRBcmVhLnNldEF0dHJpYnV0ZShcInJvd3NcIixcIjNcIik7XHJcbiAgdGV4dEFyZWEuc2V0QXR0cmlidXRlKFwiY29sc1wiLFwiMjBcIik7XHJcbiAgZGVzY0Rpdi5hcHBlbmQobGFiZWxEZXNjcmlwdGlvbix0ZXh0QXJlYSk7XHJcblxyXG4gIC8vIGR1ZSBkYXRlIGZvciBmb3JtXHJcbiAgY29uc3QgZHVlRGF0ZURpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XHJcbiAgbGFiZWxEdWVEYXRlLnNldEF0dHJpYnV0ZShcImZvclwiLFwiZHVlRGF0ZVwiKTtcclxuICBsYWJlbER1ZURhdGUudGV4dENvbnRlbnQgPSBcIkR1ZSBEYXRlOiBcIjtcclxuICBpbnB1dERhdGUuc2V0QXR0cmlidXRlKFwidHlwZVwiLFwiZGF0ZVwiKTtcclxuICBpbnB1dERhdGUuc2V0QXR0cmlidXRlKFwibmFtZVwiLFwiZHVlRGF0ZVwiKTtcclxuICBkdWVEYXRlRGl2LmFwcGVuZChsYWJlbER1ZURhdGUsaW5wdXREYXRlKTtcclxuXHJcbiAgLy8gcHJpb3JpdHkgc2VsZWN0aW9uIGZvciBmb3JtXHJcbiAgY29uc3QgcHJpb3JpdHlEaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xyXG4gIGxhYmVsUHJpb3JpdHkuc2V0QXR0cmlidXRlKFwiZm9yXCIsXCJwcmlvcml0eVwiKTtcclxuICBsYWJlbFByaW9yaXR5LnRleHRDb250ZW50ID0gXCJQcmlvcml0eTogXCI7XHJcbiAgc2VsZWN0LnNldEF0dHJpYnV0ZShcIm5hbWVcIixcInByaW9yaXR5XCIpO1xyXG4gIGhpZ2hQcmlvcml0eS5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLFwiaGlnaFByaW9yaXR5XCIpO1xyXG4gIGhpZ2hQcmlvcml0eS50ZXh0Q29udGVudCA9IFwiSGlnaFwiO1xyXG4gIG1lZFByaW9yaXR5LnNldEF0dHJpYnV0ZShcInZhbHVlXCIsXCJtZWRQcmlvcml0eVwiKTtcclxuICBtZWRQcmlvcml0eS50ZXh0Q29udGVudCA9IFwiTWVkaXVtXCI7XHJcbiAgbG93UHJpb3JpdHkuc2V0QXR0cmlidXRlKFwidmFsdWVcIixcImxvd1ByaW9yaXR5XCIpO1xyXG4gIGxvd1ByaW9yaXR5LnRleHRDb250ZW50ID0gXCJMb3dcIjtcclxuICBzZWxlY3QuYXBwZW5kKGhpZ2hQcmlvcml0eSwgbWVkUHJpb3JpdHksIGxvd1ByaW9yaXR5KTtcclxuICBwcmlvcml0eURpdi5hcHBlbmQobGFiZWxQcmlvcml0eSwgc2VsZWN0KTtcclxuXHJcbiAgLy9zdWJtaXQgYnV0dG9uXHJcbiAgc3VibWl0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBmb3JtU3VibWl0KTtcclxuICBzdWJtaXRCdXR0b24udGV4dENvbnRlbnQgPSBcIkFkZCBUby1Eb1wiO1xyXG4gIGZvcm0uYXBwZW5kKHRpdGxlRGl2LCBkZXNjRGl2LCBkdWVEYXRlRGl2LCBwcmlvcml0eURpdiwgc3VibWl0QnV0dG9uKTtcclxuXHJcbiAgZGl2LmFwcGVuZENoaWxkKGZvcm0pXHJcbiAgY29udGVudC5hcHBlbmRDaGlsZChkaXYpO1xyXG59IiwiaW1wb3J0IG5ld1Byb2plY3RPdmVybGF5IGZyb20gXCIuL25ld1Byb2plY3RPdmVybGF5LmpzXCI7XHJcbmltcG9ydCB7cHJvamVjdCwgYWxsUHJvamVjdHN9IGZyb20gXCIuL3RvRG9DbGFzc2VzLmpzXCI7XHJcbmltcG9ydCBnZW5lcmF0ZUNvbnRlbnQgZnJvbSBcIi4vY29udGVudC5qc1wiO1xyXG5pbXBvcnQgdHJhc2hJbWcgZnJvbSBcIi4vaW1ncy90cmFzaC5zdmdcIjtcclxuXHJcbi8vIGRpc3BsYXlzIG91ciBkeW5hbWljYWxseSBnZW5lcmF0ZWQgc2lkZWJhclxyXG5leHBvcnQgY29uc3Qgc2lkZUJhckJvZHkgPSAoKCkgPT4ge1xyXG4gIGluaXRpYWxpemVEZWZhdWx0UHJvamVjdCgpO1xyXG4gIGRpc3BsYXlQcm9qZWN0cygpO1xyXG4gIGNyZWF0ZU5ld1Byb2plY3QoKTtcclxufSkoKSBcclxuXHJcbi8vIGZ1bmN0aW9uIHRvIGFkZCBtb3JlIHByb2plY3RzXHJcbmZ1bmN0aW9uIGNyZWF0ZU5ld1Byb2plY3QoKSB7XHJcbiAgY29uc3Qgc2lkZUJhciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic2lkZUJhclwiKTtcclxuICBjb25zdCBuZXdQcm9qZWN0QnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcclxuXHJcbiAgbmV3UHJvamVjdEJ1dHRvbi50ZXh0Q29udGVudCA9IFwiTmV3IFByb2plY3RcIjtcclxuXHJcbiAgbmV3UHJvamVjdEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgbmV3UHJvamVjdE92ZXJsYXkpXHJcbiAgXHJcbiAgc2lkZUJhci5hcHBlbmRDaGlsZChuZXdQcm9qZWN0QnV0dG9uKTtcclxufVxyXG5cclxuZnVuY3Rpb24gaW5pdGlhbGl6ZURlZmF1bHRQcm9qZWN0KCkge1xyXG4gICAgY29uc3QgYWxsUHJvamVjdCA9IG5ldyBhbGxQcm9qZWN0cygpXHJcbiAgICBjb25zdCBkZWZhdWx0UHJvamVjdCA9IG5ldyBwcm9qZWN0KFwiTWFpblwiKVxyXG4gICAgYWxsUHJvamVjdC5hZGRQcm9qZWN0KGRlZmF1bHRQcm9qZWN0KTtcclxuICAgIFxyXG4gICAgY29uc3QgZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcclxuICAgIGNvbnN0IGgzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImgzXCIpO1xyXG4gICAgaDMudGV4dENvbnRlbnQgPSBkZWZhdWx0UHJvamVjdC5wcm9qZWN0TmFtZTtcclxuICAgIGRpdi5zZXRBdHRyaWJ1dGUoXCJpZFwiLFwic2VsZWN0ZWRQcm9qZWN0XCIpO1xyXG4gICAgZGl2LnNldEF0dHJpYnV0ZShcImNsYXNzXCIsXCJkZWZhdWx0UHJvamVjdFwiKTtcclxuICAgIC8vIGV2ZW50IGxpc3RlbmVyIHRvIGdlbmVyYXRlIHRvZG8gaXRlbXMgZm9yIHByb2plY3QgaW4gY29udGVudFxyXG4gICAgZGl2LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCgpID0+IHtcclxuICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNzZWxlY3RlZFByb2plY3RcIikucmVtb3ZlQXR0cmlidXRlKFwiaWRcIik7XHJcbiAgICAgIGN1cnJlbnRTZWxlY3RlZFByb2plY3QoZGVmYXVsdFByb2plY3QpXHJcbiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic2lkZUJhclwiKS5jaGlsZHJlblswXS5zZXRBdHRyaWJ1dGUoXCJpZFwiLFwic2VsZWN0ZWRQcm9qZWN0XCIpO1xyXG4gICAgICBnZW5lcmF0ZUNvbnRlbnQoZGVmYXVsdFByb2plY3QpXHJcbiAgICB9KTtcclxuICAgIGRpdi5hcHBlbmRDaGlsZChoMyk7XHJcblxyXG4gICAgY29uc3Qgc2lkZUJhciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic2lkZUJhclwiKTtcclxuICAgIHNpZGVCYXIuYXBwZW5kQ2hpbGQoZGl2KTtcclxuICAgIGdlbmVyYXRlQ29udGVudChkZWZhdWx0UHJvamVjdCk7XHJcbn1cclxuXHJcbi8vIGluaXRpYWxpemVzIGEgbmV3IHByb2plY3QgdG8gZGlzcGxheSBvbiB0aGUgc2lkZUJhciBieSBmaXJzdCBjYWxsaW5nXHJcbmV4cG9ydCBjb25zdCBpbml0aWFsaXplTmV3UHJvamVjdCA9IChwcm9qZWN0TmFtZSkgPT4ge1xyXG4gIGNvbnN0IGFsbFByb2plY3QgPSBuZXcgYWxsUHJvamVjdHMoKVxyXG4gIGFsbFByb2plY3QuYWRkUHJvamVjdChuZXcgcHJvamVjdChwcm9qZWN0TmFtZSkpXHJcbiAgY2xlYXJQcm9qZWN0cygpO1xyXG4gIGRpc3BsYXlQcm9qZWN0cygpO1xyXG4gIC8vIHJlaW5pdGlhbGl6ZXMgaWQgYXR0cmlidXRlIGZvciBvdXIgY3VycmVudCBzZWxlY3RlZCBwcm9qZWN0XHJcbiAgLy8gZW5zdXJlIGN1cnJlbnQgcHJvamVjdCBpc250IE1haW4gdG8gcHJldmVudCBlcnJvciB3aGVyZSBzZWxlY3RlZFByb2plY3QgaWQgaXMgZ2l2ZW4gdG8gYnV0dG9uXHJcbiAgaWYoYWxsUHJvamVjdC5nZXRDdXJyZW50UHJvamVjdEluZGV4KCkgIT09IDApIHtcclxuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic2lkZUJhclwiKS5jaGlsZHJlblsxK2FsbFByb2plY3QuZ2V0Q3VycmVudFByb2plY3RJbmRleCgpXS5zZXRBdHRyaWJ1dGUoXCJpZFwiLFwic2VsZWN0ZWRQcm9qZWN0XCIpO1xyXG4gIH1cclxufVxyXG5cclxuLy8gY2xlYXJzIHByb2plY3RzIGZyb20gRE9NIHRvIHByZXZlbnQgZHVwbGljYXRpb24gd2hlbiBydW5uaW5nIHRoZSBkaXNwbGF5UHJvamVjdHMgZnVuY3Rpb25cclxuZnVuY3Rpb24gY2xlYXJQcm9qZWN0cygpIHtcclxuICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcucHJvamVjdHMnKS5mb3JFYWNoKGUgPT4gZS5yZW1vdmUoKSk7XHJcbn1cclxuXHJcbi8vIGRpc3BsYXlzIG91ciBwcm9qZWN0cyBvbiB0aGUgc2lkZWJhclxyXG5mdW5jdGlvbiBkaXNwbGF5UHJvamVjdHMoKSB7XHJcbiAgY29uc3QgcHJvamVjdHMgPSBuZXcgYWxsUHJvamVjdHMoKTtcclxuICBwcm9qZWN0cy5nZXRQcm9qZWN0cygpLmZvckVhY2goZWxlbWVudCA9PiB7XHJcbiAgICBpZihlbGVtZW50LnByb2plY3ROYW1lID09PSBcIk1haW5cIikge1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBjb25zdCBkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xyXG4gICAgY29uc3QgdHJhc2ggPSBuZXcgSW1hZ2UoMjAsMjApO1xyXG4gICAgdHJhc2guc3JjID0gdHJhc2hJbWc7XHJcblxyXG4gICAgLy8gZXZlbnQgbGlzdGVuZXIgZm9yIGRlbGV0aW5nIHByb2plY3RzXHJcbiAgICAvLyBpZiBwcm9qZWN0IGN1cnJlbnRseSBvbiBkZWxldGVkIGRlZmF1bHRzIHRvIE1haW4sIG90aGVyd2lzZSBzdGF5cyBvbiBjdXJyZW50IHByb2plY3RcclxuICAgIHRyYXNoLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLChlKSA9PiB7XHJcbiAgICAgIHByb2plY3RzLnJlbW92ZVByb2plY3QoZWxlbWVudCk7XHJcbiAgICAgIGlmKGUudGFyZ2V0LnBhcmVudEVsZW1lbnQuaGFzQXR0cmlidXRlKFwiaWRcIikpIHtcclxuICAgICAgICBjdXJyZW50U2VsZWN0ZWRQcm9qZWN0KHByb2plY3RzLmdldFByb2plY3RzKClbMF0pO1xyXG4gICAgICAgIGdlbmVyYXRlQ29udGVudChwcm9qZWN0cy5nZXRQcm9qZWN0cygpWzBdKVxyXG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZGVmYXVsdFByb2plY3RcIikuc2V0QXR0cmlidXRlKFwiaWRcIixcInNlbGVjdGVkUHJvamVjdFwiKTtcclxuICAgICAgICBjbGVhclByb2plY3RzKCk7XHJcbiAgICAgICAgZGlzcGxheVByb2plY3RzKCk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgY2xlYXJQcm9qZWN0cygpO1xyXG4gICAgICAgIGRpc3BsYXlQcm9qZWN0cygpO1xyXG4gICAgICAgIC8vIHJlaW5pdGlhbGl6ZXMgaWQgYXR0cmlidXRlIGZvciBvdXIgY3VycmVudCBzZWxlY3RlZCBwcm9qZWN0XHJcbiAgICAgICAgLy8gZW5zdXJlIGN1cnJlbnQgcHJvamVjdCBpc250IE1haW4gdG8gcHJldmVudCBlcnJvciB3aGVyZSBzZWxlY3RlZFByb2plY3QgaWQgaXMgZ2l2ZW4gdG8gYnV0dG9uXHJcbiAgICAgICAgaWYocHJvamVjdHMuZ2V0Q3VycmVudFByb2plY3RJbmRleCgpICE9PSAwKSB7XHJcbiAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNpZGVCYXJcIikuY2hpbGRyZW5bMStwcm9qZWN0cy5nZXRDdXJyZW50UHJvamVjdEluZGV4KCldLnNldEF0dHJpYnV0ZShcImlkXCIsXCJzZWxlY3RlZFByb2plY3RcIik7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9KVxyXG4gICAgY29uc3QgaDMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaDNcIik7XHJcbiAgICBoMy50ZXh0Q29udGVudCA9IGVsZW1lbnQucHJvamVjdE5hbWU7XHJcbiAgICBkaXYuc2V0QXR0cmlidXRlKFwiY2xhc3NcIixcInByb2plY3RzXCIpO1xyXG5cclxuICAgIC8vIGV2ZW50IGxpc3RlbmVyIHRvIGdlbmVyYXRlIHRvZG8gaXRlbXMgZm9yIHByb2plY3QgaW4gY29udGVudFxyXG4gICAgaDMuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsKCkgPT4ge1xyXG4gICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3NlbGVjdGVkUHJvamVjdFwiKS5yZW1vdmVBdHRyaWJ1dGUoXCJpZFwiKTtcclxuICAgICAgY3VycmVudFNlbGVjdGVkUHJvamVjdChlbGVtZW50KVxyXG4gICAgICAvLyByZWluaXRpYWxpemVzIGlkIGF0dHJpYnV0ZSBmb3Igb3VyIGN1cnJlbnQgc2VsZWN0ZWQgcHJvamVjdFxyXG4gICAgICAvLyBlbnN1cmUgY3VycmVudCBwcm9qZWN0IGlzbnQgTWFpbiB0byBwcmV2ZW50IGVycm9yIHdoZXJlIHNlbGVjdGVkUHJvamVjdCBpZCBpcyBnaXZlbiB0byBidXR0b25cclxuICAgICAgaWYocHJvamVjdHMuZ2V0Q3VycmVudFByb2plY3RJbmRleCgpICE9PSAwKSB7XHJcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzaWRlQmFyXCIpLmNoaWxkcmVuWzErcHJvamVjdHMuZ2V0Q3VycmVudFByb2plY3RJbmRleCgpXS5zZXRBdHRyaWJ1dGUoXCJpZFwiLFwic2VsZWN0ZWRQcm9qZWN0XCIpO1xyXG4gICAgICB9XHJcbiAgICAgIGdlbmVyYXRlQ29udGVudChlbGVtZW50KVxyXG4gICAgfSk7XHJcbiAgICBkaXYuYXBwZW5kKGgzLCB0cmFzaCk7XHJcblxyXG4gICAgY29uc3Qgc2lkZUJhciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic2lkZUJhclwiKTtcclxuICAgIHNpZGVCYXIuYXBwZW5kQ2hpbGQoZGl2KTtcclxuICB9KTtcclxufVxyXG5cclxuLy9mdW5jdGlvbiB0byBjaGFuZ2UgdGhlIGN1cnJlbnRQcm9qZWN0TmFtZSBpbiB0aGUgYWxsUHJvamVjdHMgY2xhc3MsIGtlZXBzIHRyYWNrIG9mIHdoaWNoIHRvZG8gbGlzdCBpdGVtcyB0byBkaXNwbGF5XHJcbmZ1bmN0aW9uIGN1cnJlbnRTZWxlY3RlZFByb2plY3QocHJvamVjdE5hbWUpIHtcclxuICBjb25zdCBwcm9qZWN0cyA9IG5ldyBhbGxQcm9qZWN0cygpO1xyXG4gIHByb2plY3RzLnNldEN1cnJlbnRQcm9qZWN0KHByb2plY3ROYW1lKTtcclxufVxyXG5cclxuIl0sIm5hbWVzIjpbIl9fX0NTU19MT0FERVJfRVhQT1JUX19fIiwicHVzaCIsIm1vZHVsZSIsImlkIiwiZXhwb3J0cyIsImNzc1dpdGhNYXBwaW5nVG9TdHJpbmciLCJsaXN0IiwidG9TdHJpbmciLCJ0aGlzIiwibWFwIiwiaXRlbSIsImNvbnRlbnQiLCJuZWVkTGF5ZXIiLCJjb25jYXQiLCJsZW5ndGgiLCJqb2luIiwiaSIsIm1vZHVsZXMiLCJtZWRpYSIsImRlZHVwZSIsInN1cHBvcnRzIiwibGF5ZXIiLCJ1bmRlZmluZWQiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwiayIsIl9rIiwiY3NzTWFwcGluZyIsImJ0b2EiLCJiYXNlNjQiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJkYXRhIiwic291cmNlTWFwcGluZyIsInN0eWxlc0luRE9NIiwiZ2V0SW5kZXhCeUlkZW50aWZpZXIiLCJpZGVudGlmaWVyIiwicmVzdWx0IiwibW9kdWxlc1RvRG9tIiwib3B0aW9ucyIsImlkQ291bnRNYXAiLCJpZGVudGlmaWVycyIsImJhc2UiLCJjb3VudCIsImluZGV4QnlJZGVudGlmaWVyIiwib2JqIiwiY3NzIiwic291cmNlTWFwIiwicmVmZXJlbmNlcyIsInVwZGF0ZXIiLCJhZGRFbGVtZW50U3R5bGUiLCJieUluZGV4Iiwic3BsaWNlIiwiYXBpIiwiZG9tQVBJIiwidXBkYXRlIiwibmV3T2JqIiwicmVtb3ZlIiwibGFzdElkZW50aWZpZXJzIiwibmV3TGlzdCIsImluZGV4IiwibmV3TGFzdElkZW50aWZpZXJzIiwiX2kiLCJfaW5kZXgiLCJtZW1vIiwiaW5zZXJ0Iiwic3R5bGUiLCJ0YXJnZXQiLCJzdHlsZVRhcmdldCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsIndpbmRvdyIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudERvY3VtZW50IiwiaGVhZCIsImUiLCJnZXRUYXJnZXQiLCJFcnJvciIsImFwcGVuZENoaWxkIiwiZWxlbWVudCIsImNyZWF0ZUVsZW1lbnQiLCJzZXRBdHRyaWJ1dGVzIiwiYXR0cmlidXRlcyIsInN0eWxlRWxlbWVudCIsIm5vbmNlIiwic2V0QXR0cmlidXRlIiwiaW5zZXJ0U3R5bGVFbGVtZW50Iiwic3R5bGVUYWdUcmFuc2Zvcm0iLCJhcHBseSIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsInJlbW92ZVN0eWxlRWxlbWVudCIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiZmlyc3RDaGlsZCIsImNyZWF0ZVRleHROb2RlIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsIm4iLCJnZXR0ZXIiLCJfX2VzTW9kdWxlIiwiZCIsImEiLCJkZWZpbml0aW9uIiwia2V5IiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsImciLCJnbG9iYWxUaGlzIiwiRnVuY3Rpb24iLCJwcm9wIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwic2NyaXB0VXJsIiwiaW1wb3J0U2NyaXB0cyIsImxvY2F0aW9uIiwiY3VycmVudFNjcmlwdCIsInNyYyIsInNjcmlwdHMiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsInJlcGxhY2UiLCJwIiwibmMiLCJsb2NhbHMiLCJwcm9qZWN0IiwiaXRlbUFyciIsImNvbnN0cnVjdG9yIiwicHJvamVjdE5hbWUiLCJhZGRUb0RvIiwidG9Eb0l0ZW0iLCJyZW1vdmVUb0RvIiwiZmlsdGVyIiwic3RhdGljIiwidGl0bGUiLCJkZXNjcmlwdGlvbiIsImR1ZURhdGUiLCJwcmlvcml0eSIsImFsbFByb2plY3RzIiwiYWRkUHJvamVjdCIsInJlbW92ZVByb2plY3QiLCJnZXRQcm9qZWN0cyIsImdldEN1cnJlbnRQcm9qZWN0IiwiZ2V0Q3VycmVudFByb2plY3RJbmRleCIsInNldEN1cnJlbnRQcm9qZWN0IiwiaW5jbHVkZXNQcm9qZWN0IiwiZmluZCIsIm5ld1Byb2plY3RPdmVybGF5IiwiZGl2IiwiZm9ybSIsImlucHV0IiwibGFiZWwiLCJzdWJtaXRCdXR0b24iLCJjbG9zZUZvcm1CdXR0b24iLCJ0ZXh0Q29udGVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJwcm9qZWN0cyIsInZhbHVlIiwidHJpbSIsInByZXZlbnREZWZhdWx0IiwiYWxlcnQiLCJpbml0aWFsaXplTmV3UHJvamVjdCIsInJlc2V0IiwiYXBwZW5kIiwiYm9keSIsImdlbmVyYXRlQ29udGVudCIsImdldEVsZW1lbnRCeUlkIiwicmVwbGFjZUNoaWxkcmVuIiwiaW5wdXRUaXRsZSIsInRleHRBcmVhIiwiaW5wdXREYXRlIiwic2VsZWN0IiwiaGlnaFByaW9yaXR5IiwibWVkUHJpb3JpdHkiLCJsb3dQcmlvcml0eSIsImxhYmVsVGl0bGUiLCJsYWJlbERlc2NyaXB0aW9uIiwibGFiZWxEdWVEYXRlIiwibGFiZWxQcmlvcml0eSIsInRpdGxlRGl2IiwiZGVzY0RpdiIsImR1ZURhdGVEaXYiLCJwcmlvcml0eURpdiIsImZvcm1TdWJtaXQiLCJuZXdUb0RvRm9ybSIsImZvckVhY2giLCJ0cmFzaCIsIkltYWdlIiwidG9Eb0l0ZW1zIiwiYWxsUHJvamVjdCIsImZvcm1EYXRhIiwiRm9ybURhdGEiLCJkZWZhdWx0UHJvamVjdCIsImgzIiwicmVtb3ZlQXR0cmlidXRlIiwiY3VycmVudFNlbGVjdGVkUHJvamVjdCIsImNoaWxkcmVuIiwiaW5pdGlhbGl6ZURlZmF1bHRQcm9qZWN0IiwiZGlzcGxheVByb2plY3RzIiwic2lkZUJhciIsIm5ld1Byb2plY3RCdXR0b24iLCJjcmVhdGVOZXdQcm9qZWN0IiwiY2xlYXJQcm9qZWN0cyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJwYXJlbnRFbGVtZW50IiwiaGFzQXR0cmlidXRlIl0sInNvdXJjZVJvb3QiOiIifQ==