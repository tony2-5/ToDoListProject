(()=>{"use strict";var e={28:(e,t,n)=>{n.d(t,{Z:()=>i});var r=n(537),o=n.n(r),a=n(645),c=n.n(a)()(o());c.push([e.id,'html {\n  height: 100vh;\n  width: 100vw;\n}\nbody {\n  margin:0;\n  display: grid;\n  grid-template-columns: repeat(4, 25vw);\n  grid-template-rows: repeat(5, 20vh);\n  grid-template-areas: \n    "header header header header"\n    "sideBar content content content"\n    "sideBar content content content"\n    "sideBar content content content"\n    "sideBar content content content";\n}\n#header {\n  grid-area: header;\n  background-color: red;\n}\n#sideBar {\n  display: flex;\n  flex-direction: column;\n  grid-area: sideBar;\n  background-color: blue;\n  align-items: center;\n}\n#sideBar button {\n  width: 15vw;\n  height:5vh;\n}\n#content {\n  grid-area: content;\n  background-color: green;\n}\n#newProjectOverlay {\n  position: absolute;\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: rgba(0,0,0,.7);\n}\n#newProjectOverlay form {\n  display: flex;\n  flex-direction: column;\n}\n#newProjectOverlay button {\n  width: 15vw;\n  height: 3vh;\n}',"",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,YAAY;AACd;AACA;EACE,QAAQ;EACR,aAAa;EACb,sCAAsC;EACtC,mCAAmC;EACnC;;;;;qCAKmC;AACrC;AACA;EACE,iBAAiB;EACjB,qBAAqB;AACvB;AACA;EACE,aAAa;EACb,sBAAsB;EACtB,kBAAkB;EAClB,sBAAsB;EACtB,mBAAmB;AACrB;AACA;EACE,WAAW;EACX,UAAU;AACZ;AACA;EACE,kBAAkB;EAClB,uBAAuB;AACzB;AACA;EACE,kBAAkB;EAClB,aAAa;EACb,YAAY;EACZ,aAAa;EACb,mBAAmB;EACnB,uBAAuB;EACvB,gCAAgC;AAClC;AACA;EACE,aAAa;EACb,sBAAsB;AACxB;AACA;EACE,WAAW;EACX,WAAW;AACb",sourcesContent:['html {\r\n  height: 100vh;\r\n  width: 100vw;\r\n}\r\nbody {\r\n  margin:0;\r\n  display: grid;\r\n  grid-template-columns: repeat(4, 25vw);\r\n  grid-template-rows: repeat(5, 20vh);\r\n  grid-template-areas: \r\n    "header header header header"\r\n    "sideBar content content content"\r\n    "sideBar content content content"\r\n    "sideBar content content content"\r\n    "sideBar content content content";\r\n}\r\n#header {\r\n  grid-area: header;\r\n  background-color: red;\r\n}\r\n#sideBar {\r\n  display: flex;\r\n  flex-direction: column;\r\n  grid-area: sideBar;\r\n  background-color: blue;\r\n  align-items: center;\r\n}\r\n#sideBar button {\r\n  width: 15vw;\r\n  height:5vh;\r\n}\r\n#content {\r\n  grid-area: content;\r\n  background-color: green;\r\n}\r\n#newProjectOverlay {\r\n  position: absolute;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: rgba(0,0,0,.7);\r\n}\r\n#newProjectOverlay form {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n#newProjectOverlay button {\r\n  width: 15vw;\r\n  height: 3vh;\r\n}'],sourceRoot:""}]);const i=c},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var c={};if(r)for(var i=0;i<this.length;i++){var s=this[i][0];null!=s&&(c[s]=!0)}for(var d=0;d<e.length;d++){var l=[].concat(e[d]);r&&c[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),t.push(l))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[t].concat([a]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var a={},c=[],i=0;i<e.length;i++){var s=e[i],d=r.base?s[0]+r.base:s[0],l=a[d]||0,u="".concat(d," ").concat(l);a[d]=l+1;var A=n(u),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==A)t[A].references++,t[A].updater(p);else{var m=o(p,r);r.byIndex=i,t.splice(i,0,{identifier:u,updater:m,references:1})}c.push(u)}return c}function o(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,o){var a=r(e=e||[],o=o||{});return function(e){e=e||[];for(var c=0;c<a.length;c++){var i=n(a[c]);t[i].references--}for(var s=r(e,o),d=0;d<a.length;d++){var l=n(a[d]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}a=s}}},569:e=>{var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,o&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var a=n.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var a=t[r]={id:r,exports:{}};return e[r](a,a.exports,n),a.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0,(()=>{var e=n(379),t=n.n(e),r=n(795),o=n.n(r),a=n(569),c=n.n(a),i=n(565),s=n.n(i),d=n(216),l=n.n(d),u=n(589),A=n.n(u),p=n(28),m={};m.styleTagTransform=A(),m.setAttributes=s(),m.insert=c().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=l(),t()(p.Z,m),p.Z&&p.Z.locals&&p.Z.locals;class f{itemArr=[];constructor(e){this.projectName=e}addToDo(e){this.itemArr.push(e)}removeToDo(e){itemArr=itemArr.filter((t=>t.key!==e.key))}}class h{static#e=[];addProject(e){h.#e.push(e)}removeProject(e){h.#e=h.projectArray.filter((t=>t.projectName!==e.projectName))}getProjects(){return h.#e}}function v(){const e=document.createElement("div"),t=document.createElement("form"),n=document.createElement("input"),r=document.createElement("label"),o=document.createElement("button"),a=document.createElement("button");e.setAttribute("id","newProjectOverlay"),n.setAttribute("type","text"),n.setAttribute("name","projectName"),r.setAttribute("for","projectName"),r.textContent="Enter project name: ",o.textContent="Submit",o.addEventListener("click",(e=>{e.preventDefault(),C(n.value),t.reset()})),a.textContent="Close",a.addEventListener("click",(()=>{e.remove()})),t.append(r,n,o,a),e.appendChild(t),document.body.appendChild(e)}const C=e=>{(new h).addProject(new f(e)),document.querySelectorAll(".projects").forEach((e=>e.remove())),(new h).getProjects().forEach((e=>{const t=document.createElement("div"),n=document.createElement("h3");n.textContent=e.projectName,t.setAttribute("class","projects"),t.appendChild(n),document.getElementById("sideBar").appendChild(t)}))};!function(){const e=document.getElementById("sideBar"),t=document.createElement("button");t.textContent="New Project",t.addEventListener("click",v),e.appendChild(t)}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,