(()=>{"use strict";var e={28:(e,t,n)=>{n.d(t,{Z:()=>i});var r=n(537),o=n.n(r),a=n(645),c=n.n(a)()(o());c.push([e.id,'html {\n  height: 100vh;\n  width: 100vw;\n}\nbody {\n  margin:0;\n  display: grid;\n  grid-template-columns: repeat(4, 25vw);\n  grid-template-rows: repeat(5, 20vh);\n  grid-template-areas: \n    "header header header header"\n    "sideBar content content content"\n    "sideBar content content content"\n    "sideBar content content content"\n    "sideBar content content content";\n}\n#header {\n  grid-area: header;\n  background-color: red;\n}\n#sideBar {\n  display: flex;\n  flex-direction: column;\n  grid-area: sideBar;\n  background-color: blue;\n  align-items: center;\n}\n#sideBar button {\n  width: 15vw;\n  height:5vh;\n}\n#content {\n  grid-area: content;\n  background-color: green;\n}\n.toDoItem {\n  display: flex;\n  gap:3vw;\n  background-color: lightcoral;\n  border-radius: 10px;\n}\n#addToDo {\n  display: flex;\n}\n#addToDo form {\n  background-color: lightgreen;\n  padding-right: 3vw;\n  padding-left: 3vw;\n  padding-bottom: 1vh;\n  padding-top: 1vh;\n  border-radius: 10px;\n  gap: 3vw;\n  display: flex;\n  justify-content: center;\n}\n#addToDo form div {\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n}\n#addToDo form button {\n  align-self: center;\n  width: 5vw;\n  height: 4vh;\n}\n#newProjectOverlay {\n  position: absolute;\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: rgba(0,0,0,.7);\n}\n#newProjectOverlay form {\n  display: flex;\n  flex-direction: column;\n}\n#newProjectOverlay button {\n  width: 15vw;\n  height: 3vh;\n}\n#selectedProject {\n  border-style: inset;\n}',"",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,YAAY;AACd;AACA;EACE,QAAQ;EACR,aAAa;EACb,sCAAsC;EACtC,mCAAmC;EACnC;;;;;qCAKmC;AACrC;AACA;EACE,iBAAiB;EACjB,qBAAqB;AACvB;AACA;EACE,aAAa;EACb,sBAAsB;EACtB,kBAAkB;EAClB,sBAAsB;EACtB,mBAAmB;AACrB;AACA;EACE,WAAW;EACX,UAAU;AACZ;AACA;EACE,kBAAkB;EAClB,uBAAuB;AACzB;AACA;EACE,aAAa;EACb,OAAO;EACP,4BAA4B;EAC5B,mBAAmB;AACrB;AACA;EACE,aAAa;AACf;AACA;EACE,4BAA4B;EAC5B,kBAAkB;EAClB,iBAAiB;EACjB,mBAAmB;EACnB,gBAAgB;EAChB,mBAAmB;EACnB,QAAQ;EACR,aAAa;EACb,uBAAuB;AACzB;AACA;EACE,aAAa;EACb,uBAAuB;EACvB,sBAAsB;AACxB;AACA;EACE,kBAAkB;EAClB,UAAU;EACV,WAAW;AACb;AACA;EACE,kBAAkB;EAClB,aAAa;EACb,YAAY;EACZ,aAAa;EACb,mBAAmB;EACnB,uBAAuB;EACvB,gCAAgC;AAClC;AACA;EACE,aAAa;EACb,sBAAsB;AACxB;AACA;EACE,WAAW;EACX,WAAW;AACb;AACA;EACE,mBAAmB;AACrB",sourcesContent:['html {\r\n  height: 100vh;\r\n  width: 100vw;\r\n}\r\nbody {\r\n  margin:0;\r\n  display: grid;\r\n  grid-template-columns: repeat(4, 25vw);\r\n  grid-template-rows: repeat(5, 20vh);\r\n  grid-template-areas: \r\n    "header header header header"\r\n    "sideBar content content content"\r\n    "sideBar content content content"\r\n    "sideBar content content content"\r\n    "sideBar content content content";\r\n}\r\n#header {\r\n  grid-area: header;\r\n  background-color: red;\r\n}\r\n#sideBar {\r\n  display: flex;\r\n  flex-direction: column;\r\n  grid-area: sideBar;\r\n  background-color: blue;\r\n  align-items: center;\r\n}\r\n#sideBar button {\r\n  width: 15vw;\r\n  height:5vh;\r\n}\r\n#content {\r\n  grid-area: content;\r\n  background-color: green;\r\n}\r\n.toDoItem {\r\n  display: flex;\r\n  gap:3vw;\r\n  background-color: lightcoral;\r\n  border-radius: 10px;\r\n}\r\n#addToDo {\r\n  display: flex;\r\n}\r\n#addToDo form {\r\n  background-color: lightgreen;\r\n  padding-right: 3vw;\r\n  padding-left: 3vw;\r\n  padding-bottom: 1vh;\r\n  padding-top: 1vh;\r\n  border-radius: 10px;\r\n  gap: 3vw;\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n#addToDo form div {\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n}\r\n#addToDo form button {\r\n  align-self: center;\r\n  width: 5vw;\r\n  height: 4vh;\r\n}\r\n#newProjectOverlay {\r\n  position: absolute;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: rgba(0,0,0,.7);\r\n}\r\n#newProjectOverlay form {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n#newProjectOverlay button {\r\n  width: 15vw;\r\n  height: 3vh;\r\n}\r\n#selectedProject {\r\n  border-style: inset;\r\n}'],sourceRoot:""}]);const i=c},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var c={};if(r)for(var i=0;i<this.length;i++){var d=this[i][0];null!=d&&(c[d]=!0)}for(var s=0;s<e.length;s++){var l=[].concat(e[s]);r&&c[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),t.push(l))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[t].concat([a]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var a={},c=[],i=0;i<e.length;i++){var d=e[i],s=r.base?d[0]+r.base:d[0],l=a[s]||0,A="".concat(s," ").concat(l);a[s]=l+1;var u=n(A),m={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==u)t[u].references++,t[u].updater(m);else{var p=o(m,r);r.byIndex=i,t.splice(i,0,{identifier:A,updater:p,references:1})}c.push(A)}return c}function o(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,o){var a=r(e=e||[],o=o||{});return function(e){e=e||[];for(var c=0;c<a.length;c++){var i=n(a[c]);t[i].references--}for(var d=r(e,o),s=0;s<a.length;s++){var l=n(a[s]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}a=d}}},569:e=>{var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,o&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var a=n.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var a=t[r]={id:r,exports:{}};return e[r](a,a.exports,n),a.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0,(()=>{var e=n(379),t=n.n(e),r=n(795),o=n.n(r),a=n(569),c=n.n(a),i=n(565),d=n.n(i),s=n(216),l=n.n(s),A=n(589),u=n.n(A),m=n(28),p={};function f(){const e=document.createElement("div"),t=document.createElement("form"),n=document.createElement("input"),r=document.createElement("label"),o=document.createElement("button"),a=document.createElement("button");e.setAttribute("id","newProjectOverlay"),n.setAttribute("type","text"),n.setAttribute("name","projectName"),r.setAttribute("for","projectName"),r.textContent="Enter project name: ",o.textContent="Submit",o.addEventListener("click",(e=>{0===n.value.trim().length?(e.preventDefault(),alert("Project name cannot be empty!")):(e.preventDefault(),y(n.value),t.reset())})),a.textContent="Close",a.addEventListener("click",(()=>{e.remove()})),t.append(r,n,o,a),e.appendChild(t),document.body.appendChild(e)}p.styleTagTransform=u(),p.setAttributes=d(),p.insert=c().bind(null,"head"),p.domAPI=o(),p.insertStyleElement=l(),t()(m.Z,p),m.Z&&m.Z.locals&&m.Z.locals;class C{itemArr=[];constructor(e){this.projectName=e}addToDo(e){this.itemArr.push(e)}removeToDo(e){itemArr=itemArr.filter((t=>t.key!==e.key))}}class h{static#e=0;constructor(e,t,n,r){this.key=h.#e++,this.title=e,this.description=t,this.dueDate=n,this.priority=r}}class v{static#t=[];static#n="Main";addProject(e){v.#t.push(e)}removeProject(e){v.#t=v.#t.filter((t=>t.projectName!==e.projectName))}getProjects(){return v.#t}getCurrentProject(){for(let e=0;e<v.#t.length;e++)if(v.#t[e].projectName===v.#n)return v.#t[e]}setCurrentProject(e){v.#n=e.projectName}}function E(e){b(),function(){const e=document.getElementById("content"),t=document.createElement("div"),n=document.createElement("form"),r=document.createElement("input"),o=document.createElement("textarea"),a=document.createElement("input"),c=document.createElement("select"),i=document.createElement("option"),d=document.createElement("option"),s=document.createElement("option"),l=document.createElement("label"),A=document.createElement("label"),u=document.createElement("label"),m=document.createElement("label"),p=document.createElement("button");t.setAttribute("id","addToDo");const f=document.createElement("div");l.setAttribute("for","title"),l.textContent="Title: ",r.setAttribute("type","text"),r.setAttribute("name","title"),f.append(l,r);const C=document.createElement("div");A.setAttribute("for","description"),A.textContent="Description: ",o.setAttribute("name","description"),o.setAttribute("rows","3"),o.setAttribute("cols","20"),C.append(A,o);const h=document.createElement("div");u.setAttribute("for","dueDate"),u.textContent="Due Date: ",a.setAttribute("type","date"),a.setAttribute("name","dueDate"),h.append(u,a);const v=document.createElement("div");m.setAttribute("for","priority"),m.textContent="Priority: ",c.setAttribute("name","priority"),i.setAttribute("value","highPriority"),i.textContent="High",d.setAttribute("value","medPriority"),d.textContent="Medium",s.setAttribute("value","lowPriority"),s.textContent="Low",c.append(i,d,s),v.append(m,c),p.addEventListener("click",g),p.textContent="Add To-Do",n.append(f,C,h,v,p),t.appendChild(n),e.appendChild(t)}(),function(e){e.itemArr.forEach((e=>{const t=document.getElementById("content"),n=document.createElement("div");n.setAttribute("class","toDoItem");const r=document.createElement("h2");r.textContent=e.title;const o=document.createElement("h2");o.textContent=e.description;const a=document.createElement("h2");a.textContent=e.dueDate;const c=document.createElement("h2");c.textContent=e.priority,n.append(r,o,a,c),t.appendChild(n)}))}(e)}function g(e){e.preventDefault();const t=new v,n=new FormData(e.target.form);!function(e,t){e.addToDo(t)}(t.getCurrentProject(),new h(n.get("title"),n.get("description"),n.get("dueDate"),n.get("priority"))),b(),E(t.getCurrentProject()),e.target.form.reset()}function b(){document.getElementById("content").replaceChildren()}(function(){const e=new v,t=new C("Main");e.addProject(t);const n=document.createElement("div"),r=document.createElement("h3");r.textContent=t.projectName,n.setAttribute("id","selectedProject"),n.addEventListener("click",(()=>{document.querySelector("#selectedProject").removeAttribute("id"),n.setAttribute("id","selectedProject"),j(t),E(t)})),n.appendChild(r),document.getElementById("sideBar").appendChild(n),E(t)})(),B(),function(){const e=document.getElementById("sideBar"),t=document.createElement("button");t.textContent="New Project",t.addEventListener("click",f),e.appendChild(t)}();const y=e=>{(new v).addProject(new C(e)),document.querySelectorAll(".projects").forEach((e=>e.remove())),B()};function B(){(new v).getProjects().forEach((e=>{if("Main"===e.projectName)return;const t=document.createElement("div"),n=document.createElement("h3");n.textContent=e.projectName,t.setAttribute("class","projects"),t.addEventListener("click",(()=>{document.querySelector("#selectedProject").removeAttribute("id"),t.setAttribute("id","selectedProject"),j(e),E(e)})),t.appendChild(n),document.getElementById("sideBar").appendChild(t)}))}function j(e){(new v).setCurrentProject(e)}})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,