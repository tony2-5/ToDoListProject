(()=>{"use strict";var e={28:(e,t,n)=>{n.d(t,{Z:()=>i});var r=n(537),o=n.n(r),c=n(645),a=n.n(c)()(o());a.push([e.id,'html {\n  height: 100vh;\n  width: 100vw;\n}\nbody {\n  margin:0;\n  display: grid;\n  grid-template-columns: repeat(4, 25vw);\n  grid-template-rows: repeat(5, 20vh);\n  grid-template-areas: \n    "header header header header"\n    "sideBar content content content"\n    "sideBar content content content"\n    "sideBar content content content"\n    "sideBar content content content";\n}\n#header {\n  grid-area: header;\n  background-color: red;\n}\n#sideBar {\n  display: flex;\n  flex-direction: column;\n  grid-area: sideBar;\n  background-color: blue;\n  align-items: center;\n}\n#sideBar button {\n  width: 15vw;\n  height:5vh;\n}\n#content {\n  grid-area: content;\n  background-color: green;\n}\n.toDoItem {\n  display: flex;\n  gap:3vw;\n  background-color: lightcoral;\n  border-radius: 10px;\n  align-items: center;\n}\n#addToDo {\n  display: flex;\n}\n#addToDo form {\n  background-color: lightgreen;\n  padding-right: 3vw;\n  padding-left: 3vw;\n  padding-bottom: 1vh;\n  padding-top: 1vh;\n  border-radius: 10px;\n  gap: 3vw;\n  display: flex;\n  justify-content: center;\n}\n#addToDo form div {\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n}\n#addToDo form button {\n  align-self: center;\n  width: 5vw;\n  height: 4vh;\n}\n#newProjectOverlay {\n  position: absolute;\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: rgba(0,0,0,.7);\n}\n#newProjectOverlay form {\n  display: flex;\n  flex-direction: column;\n}\n#newProjectOverlay button {\n  width: 15vw;\n  height: 3vh;\n}\n.projects {\n  display: flex;\n  align-items: center;\n}\n#selectedProject {\n  border-style: inset;\n}\n#toDoOverlay {\n  position: absolute;\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: rgba(0,0,0,.7);\n}\n#toDoOverlayInnerDiv {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: white;\n  width: 25vw;\n  padding: 5vw;\n  border-radius: 10px;\n  z-index: 1;\n}\n#toDoOverlayInnerDiv p {\n  word-break: break-all;\n}',"",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,YAAY;AACd;AACA;EACE,QAAQ;EACR,aAAa;EACb,sCAAsC;EACtC,mCAAmC;EACnC;;;;;qCAKmC;AACrC;AACA;EACE,iBAAiB;EACjB,qBAAqB;AACvB;AACA;EACE,aAAa;EACb,sBAAsB;EACtB,kBAAkB;EAClB,sBAAsB;EACtB,mBAAmB;AACrB;AACA;EACE,WAAW;EACX,UAAU;AACZ;AACA;EACE,kBAAkB;EAClB,uBAAuB;AACzB;AACA;EACE,aAAa;EACb,OAAO;EACP,4BAA4B;EAC5B,mBAAmB;EACnB,mBAAmB;AACrB;AACA;EACE,aAAa;AACf;AACA;EACE,4BAA4B;EAC5B,kBAAkB;EAClB,iBAAiB;EACjB,mBAAmB;EACnB,gBAAgB;EAChB,mBAAmB;EACnB,QAAQ;EACR,aAAa;EACb,uBAAuB;AACzB;AACA;EACE,aAAa;EACb,uBAAuB;EACvB,sBAAsB;AACxB;AACA;EACE,kBAAkB;EAClB,UAAU;EACV,WAAW;AACb;AACA;EACE,kBAAkB;EAClB,aAAa;EACb,YAAY;EACZ,aAAa;EACb,mBAAmB;EACnB,uBAAuB;EACvB,gCAAgC;AAClC;AACA;EACE,aAAa;EACb,sBAAsB;AACxB;AACA;EACE,WAAW;EACX,WAAW;AACb;AACA;EACE,aAAa;EACb,mBAAmB;AACrB;AACA;EACE,mBAAmB;AACrB;AACA;EACE,kBAAkB;EAClB,aAAa;EACb,YAAY;EACZ,aAAa;EACb,mBAAmB;EACnB,uBAAuB;EACvB,gCAAgC;AAClC;AACA;EACE,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,uBAAuB;EACvB,WAAW;EACX,YAAY;EACZ,mBAAmB;EACnB,UAAU;AACZ;AACA;EACE,qBAAqB;AACvB",sourcesContent:['html {\r\n  height: 100vh;\r\n  width: 100vw;\r\n}\r\nbody {\r\n  margin:0;\r\n  display: grid;\r\n  grid-template-columns: repeat(4, 25vw);\r\n  grid-template-rows: repeat(5, 20vh);\r\n  grid-template-areas: \r\n    "header header header header"\r\n    "sideBar content content content"\r\n    "sideBar content content content"\r\n    "sideBar content content content"\r\n    "sideBar content content content";\r\n}\r\n#header {\r\n  grid-area: header;\r\n  background-color: red;\r\n}\r\n#sideBar {\r\n  display: flex;\r\n  flex-direction: column;\r\n  grid-area: sideBar;\r\n  background-color: blue;\r\n  align-items: center;\r\n}\r\n#sideBar button {\r\n  width: 15vw;\r\n  height:5vh;\r\n}\r\n#content {\r\n  grid-area: content;\r\n  background-color: green;\r\n}\r\n.toDoItem {\r\n  display: flex;\r\n  gap:3vw;\r\n  background-color: lightcoral;\r\n  border-radius: 10px;\r\n  align-items: center;\r\n}\r\n#addToDo {\r\n  display: flex;\r\n}\r\n#addToDo form {\r\n  background-color: lightgreen;\r\n  padding-right: 3vw;\r\n  padding-left: 3vw;\r\n  padding-bottom: 1vh;\r\n  padding-top: 1vh;\r\n  border-radius: 10px;\r\n  gap: 3vw;\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n#addToDo form div {\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n}\r\n#addToDo form button {\r\n  align-self: center;\r\n  width: 5vw;\r\n  height: 4vh;\r\n}\r\n#newProjectOverlay {\r\n  position: absolute;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: rgba(0,0,0,.7);\r\n}\r\n#newProjectOverlay form {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n#newProjectOverlay button {\r\n  width: 15vw;\r\n  height: 3vh;\r\n}\r\n.projects {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n#selectedProject {\r\n  border-style: inset;\r\n}\r\n#toDoOverlay {\r\n  position: absolute;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: rgba(0,0,0,.7);\r\n}\r\n#toDoOverlayInnerDiv {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background-color: white;\r\n  width: 25vw;\r\n  padding: 5vw;\r\n  border-radius: 10px;\r\n  z-index: 1;\r\n}\r\n#toDoOverlayInnerDiv p {\r\n  word-break: break-all;\r\n}'],sourceRoot:""}]);const i=a},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,o,c){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(r)for(var i=0;i<this.length;i++){var d=this[i][0];null!=d&&(a[d]=!0)}for(var s=0;s<e.length;s++){var l=[].concat(e[s]);r&&a[l[0]]||(void 0!==c&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=c),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),t.push(l))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),c="/*# ".concat(o," */");return[t].concat([c]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var c={},a=[],i=0;i<e.length;i++){var d=e[i],s=r.base?d[0]+r.base:d[0],l=c[s]||0,A="".concat(s," ").concat(l);c[s]=l+1;var u=n(A),m={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==u)t[u].references++,t[u].updater(m);else{var p=o(m,r);r.byIndex=i,t.splice(i,0,{identifier:A,updater:p,references:1})}a.push(A)}return a}function o(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,o){var c=r(e=e||[],o=o||{});return function(e){e=e||[];for(var a=0;a<c.length;a++){var i=n(c[a]);t[i].references--}for(var d=r(e,o),s=0;s<c.length;s++){var l=n(c[s]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}c=d}}},569:e=>{var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,o&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var c=n.sourceMap;c&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(c))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var c=t[r]={id:r,exports:{}};return e[r](c,c.exports,n),c.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var r=t.getElementsByTagName("script");if(r.length)for(var o=r.length-1;o>-1&&!e;)e=r[o--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),n.nc=void 0,(()=>{var e=n(379),t=n.n(e),r=n(795),o=n.n(r),c=n(569),a=n.n(c),i=n(565),d=n.n(i),s=n(216),l=n.n(s),A=n(589),u=n.n(A),m=n(28),p={};p.styleTagTransform=u(),p.setAttributes=d(),p.insert=a().bind(null,"head"),p.domAPI=o(),p.insertStyleElement=l(),t()(m.Z,p),m.Z&&m.Z.locals&&m.Z.locals;class C{itemArr=[];constructor(e){this.projectName=e}addToDo(e){this.itemArr.push(e)}removeToDo(e){this.itemArr=this.itemArr.filter((t=>t.key!==e.key))}}class v{static#e=0;constructor(e,t,n,r){this.key=v.#e++,this.title=e,this.description=t,this.dueDate=n,this.priority=r}setTitle(e){this.title=e}setDescription(e){this.description=e}setdueDate(e){this.dueDate=e}setTitle(e){this.priority=e}}class h{static#t=[];static#n="Main";addProject(e){h.#t.push(e)}removeProject(e){h.#t=h.#t.filter((t=>t.projectName!==e.projectName))}getProjects(){return h.#t}getCurrentProject(){for(let e=0;e<h.#t.length;e++)if(h.#t[e].projectName===h.#n)return h.#t[e]}getCurrentProjectIndex(){for(let e=0;e<h.#t.length;e++)if(h.#t[e].projectName===h.#n)return e}setCurrentProject(e){h.#n=e.projectName}includesProject(e){return null!=h.#t.find((t=>t.projectName===e))}}function f(){const e=document.createElement("div"),t=document.createElement("form"),n=document.createElement("input"),r=document.createElement("label"),o=document.createElement("button"),c=document.createElement("button");e.setAttribute("id","newProjectOverlay"),n.setAttribute("type","text"),n.setAttribute("name","projectName"),r.setAttribute("for","projectName"),r.textContent="Enter project name: ",o.textContent="Submit",o.addEventListener("click",(e=>{const r=new h;0===n.value.trim().length?(e.preventDefault(),alert("Project name cannot be empty!")):r.includesProject(n.value)?(e.preventDefault(),alert("Can not have duplicate project!")):(e.preventDefault(),y(n.value),t.reset())})),c.textContent="Close",c.addEventListener("click",(()=>{e.remove()})),t.append(r,n,o,c),e.appendChild(t),document.body.appendChild(e)}const g=n.p+"76e37d09b6d655a6df74761a4db546fa.svg";function E(){document.getElementById("toDoOverlay").remove()}function b(e){document.getElementById("content").replaceChildren(),function(){const e=document.getElementById("content"),t=document.createElement("div"),n=document.createElement("form"),r=document.createElement("input"),o=document.createElement("textarea"),c=document.createElement("input"),a=document.createElement("select"),i=document.createElement("option"),d=document.createElement("option"),s=document.createElement("option"),l=document.createElement("label"),A=document.createElement("label"),u=document.createElement("label"),m=document.createElement("label"),p=document.createElement("button");t.setAttribute("id","addToDo");const C=document.createElement("div");l.setAttribute("for","title"),l.textContent="Title: ",r.setAttribute("type","text"),r.setAttribute("name","title"),C.append(l,r);const v=document.createElement("div");A.setAttribute("for","description"),A.textContent="Description: ",o.setAttribute("name","description"),o.setAttribute("rows","3"),o.setAttribute("cols","20"),v.append(A,o);const h=document.createElement("div");u.setAttribute("for","dueDate"),u.textContent="Due Date: ",c.setAttribute("type","date"),c.setAttribute("name","dueDate"),h.append(u,c);const f=document.createElement("div");m.setAttribute("for","priority"),m.textContent="Priority: ",a.setAttribute("name","priority"),i.setAttribute("value","highPriority"),i.textContent="High",d.setAttribute("value","medPriority"),d.textContent="Medium",s.setAttribute("value","lowPriority"),s.textContent="Low",a.append(i,d,s),f.append(m,a),p.addEventListener("click",B),p.textContent="Add To-Do",n.append(C,v,h,f,p),t.appendChild(n),e.appendChild(t)}(),function(e){e.itemArr.forEach((t=>{const n=document.createElement("button");n.textContent="View To-Do",n.addEventListener("click",(()=>{!function(e,t){const n=document.createElement("div");n.setAttribute("id","toDoOverlay");const r=new Image(20,20);r.src=g,r.addEventListener("click",(()=>{E(),t.removeToDo(e),b(t)}));const o=document.createElement("div");o.setAttribute("id","toDoOverlayInnerDiv");const c=document.createElement("h2");c.textContent=e.title;const a=document.createElement("p");a.textContent=e.description;const i=document.createElement("h2");i.textContent=e.dueDate;const d=document.createElement("h2");d.textContent=e.priority;const s=document.createElement("button");s.textContent="Close",s.addEventListener("click",E),o.append(c,a,i,d,r,s),n.appendChild(o),document.body.appendChild(n)}(t,e)}));const r=document.getElementById("content"),o=document.createElement("div");o.setAttribute("class","toDoItem");const c=document.createElement("h2");c.textContent=t.title;const a=document.createElement("h2");a.textContent=t.dueDate,o.append(c,a,n),r.appendChild(o)}))}(e)}function B(e){e.preventDefault();const t=new h,n=new FormData(e.target.form);!function(e,t){e.addToDo(t)}(t.getCurrentProject(),new v(n.get("title"),n.get("description"),n.get("dueDate"),n.get("priority"))),b(t.getCurrentProject()),e.target.form.reset()}(function(){const e=new h,t=new C("Main");e.addProject(t);const n=document.createElement("div"),r=document.createElement("h3");r.textContent=t.projectName,n.setAttribute("id","selectedProject"),n.setAttribute("class","defaultProject"),n.addEventListener("click",(()=>{document.querySelector("#selectedProject").removeAttribute("id"),x(t),document.getElementById("sideBar").children[0].setAttribute("id","selectedProject"),b(t)})),n.appendChild(r),document.getElementById("sideBar").appendChild(n),b(t)})(),w(),function(){const e=document.getElementById("sideBar"),t=document.createElement("button");t.textContent="New Project",t.addEventListener("click",f),e.appendChild(t)}();const y=e=>{const t=new h;t.addProject(new C(e)),j(),w(),0!==t.getCurrentProjectIndex()&&document.getElementById("sideBar").children[1+t.getCurrentProjectIndex()].setAttribute("id","selectedProject")};function j(){document.querySelectorAll(".projects").forEach((e=>e.remove()))}function w(){const e=new h;e.getProjects().forEach((t=>{if("Main"===t.projectName)return;const n=document.createElement("div"),r=new Image(20,20);r.src=g,r.addEventListener("click",(n=>{e.removeProject(t),n.target.parentElement.hasAttribute("id")?(x(e.getProjects()[0]),b(e.getProjects()[0]),document.querySelector(".defaultProject").setAttribute("id","selectedProject"),j(),w()):(j(),w(),0!==e.getCurrentProjectIndex()&&document.getElementById("sideBar").children[1+e.getCurrentProjectIndex()].setAttribute("id","selectedProject"))}));const o=document.createElement("h3");o.textContent=t.projectName,n.setAttribute("class","projects"),o.addEventListener("click",(()=>{document.querySelector("#selectedProject").removeAttribute("id"),x(t),0!==e.getCurrentProjectIndex()&&document.getElementById("sideBar").children[1+e.getCurrentProjectIndex()].setAttribute("id","selectedProject"),b(t)})),n.append(o,r),document.getElementById("sideBar").appendChild(n)}))}function x(e){(new h).setCurrentProject(e)}})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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akcsWUFBWStFLEVBQUksR0FFNUIsQ0FHQSxTQUFTb0QsRUFBdUIzRSxJQUNiLElBQUlhLEdBQ1pNLGtCQUFrQm5CLEVBQzdCLEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b2RvbGlzdHByb2plY3QvLi9zcmMvc3R5bGVzLmNzcyIsIndlYnBhY2s6Ly90b2RvbGlzdHByb2plY3QvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwid2VicGFjazovL3RvZG9saXN0cHJvamVjdC8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzIiwid2VicGFjazovL3RvZG9saXN0cHJvamVjdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIndlYnBhY2s6Ly90b2RvbGlzdHByb2plY3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzIiwid2VicGFjazovL3RvZG9saXN0cHJvamVjdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcyIsIndlYnBhY2s6Ly90b2RvbGlzdHByb2plY3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanMiLCJ3ZWJwYWNrOi8vdG9kb2xpc3Rwcm9qZWN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanMiLCJ3ZWJwYWNrOi8vdG9kb2xpc3Rwcm9qZWN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanMiLCJ3ZWJwYWNrOi8vdG9kb2xpc3Rwcm9qZWN0L3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL3RvZG9saXN0cHJvamVjdC93ZWJwYWNrL3J1bnRpbWUvY29tcGF0IGdldCBkZWZhdWx0IGV4cG9ydCIsIndlYnBhY2s6Ly90b2RvbGlzdHByb2plY3Qvd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL3RvZG9saXN0cHJvamVjdC93ZWJwYWNrL3J1bnRpbWUvZ2xvYmFsIiwid2VicGFjazovL3RvZG9saXN0cHJvamVjdC93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL3RvZG9saXN0cHJvamVjdC93ZWJwYWNrL3J1bnRpbWUvcHVibGljUGF0aCIsIndlYnBhY2s6Ly90b2RvbGlzdHByb2plY3Qvd2VicGFjay9ydW50aW1lL25vbmNlIiwid2VicGFjazovL3RvZG9saXN0cHJvamVjdC8uL3NyYy9zdHlsZXMuY3NzPzQ0YjIiLCJ3ZWJwYWNrOi8vdG9kb2xpc3Rwcm9qZWN0Ly4vc3JjL3RvRG9DbGFzc2VzLmpzIiwid2VicGFjazovL3RvZG9saXN0cHJvamVjdC8uL3NyYy9uZXdQcm9qZWN0T3ZlcmxheS5qcyIsIndlYnBhY2s6Ly90b2RvbGlzdHByb2plY3QvLi9zcmMvaW1ncy90cmFzaC5zdmciLCJ3ZWJwYWNrOi8vdG9kb2xpc3Rwcm9qZWN0Ly4vc3JjL3RvRG9JdGVtT3ZlcmxheS5qcyIsIndlYnBhY2s6Ly90b2RvbGlzdHByb2plY3QvLi9zcmMvY29udGVudC5qcyIsIndlYnBhY2s6Ly90b2RvbGlzdHByb2plY3QvLi9zcmMvbmV3VG9Eb0Zvcm0uanMiLCJ3ZWJwYWNrOi8vdG9kb2xpc3Rwcm9qZWN0Ly4vc3JjL3NpZGVCYXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgYGh0bWwge1xyXG4gIGhlaWdodDogMTAwdmg7XHJcbiAgd2lkdGg6IDEwMHZ3O1xyXG59XHJcbmJvZHkge1xyXG4gIG1hcmdpbjowO1xyXG4gIGRpc3BsYXk6IGdyaWQ7XHJcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoNCwgMjV2dyk7XHJcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiByZXBlYXQoNSwgMjB2aCk7XHJcbiAgZ3JpZC10ZW1wbGF0ZS1hcmVhczogXHJcbiAgICBcImhlYWRlciBoZWFkZXIgaGVhZGVyIGhlYWRlclwiXHJcbiAgICBcInNpZGVCYXIgY29udGVudCBjb250ZW50IGNvbnRlbnRcIlxyXG4gICAgXCJzaWRlQmFyIGNvbnRlbnQgY29udGVudCBjb250ZW50XCJcclxuICAgIFwic2lkZUJhciBjb250ZW50IGNvbnRlbnQgY29udGVudFwiXHJcbiAgICBcInNpZGVCYXIgY29udGVudCBjb250ZW50IGNvbnRlbnRcIjtcclxufVxyXG4jaGVhZGVyIHtcclxuICBncmlkLWFyZWE6IGhlYWRlcjtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XHJcbn1cclxuI3NpZGVCYXIge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICBncmlkLWFyZWE6IHNpZGVCYXI7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogYmx1ZTtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcbiNzaWRlQmFyIGJ1dHRvbiB7XHJcbiAgd2lkdGg6IDE1dnc7XHJcbiAgaGVpZ2h0OjV2aDtcclxufVxyXG4jY29udGVudCB7XHJcbiAgZ3JpZC1hcmVhOiBjb250ZW50O1xyXG4gIGJhY2tncm91bmQtY29sb3I6IGdyZWVuO1xyXG59XHJcbi50b0RvSXRlbSB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBnYXA6M3Z3O1xyXG4gIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0Y29yYWw7XHJcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcbiNhZGRUb0RvIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG59XHJcbiNhZGRUb0RvIGZvcm0ge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0Z3JlZW47XHJcbiAgcGFkZGluZy1yaWdodDogM3Z3O1xyXG4gIHBhZGRpbmctbGVmdDogM3Z3O1xyXG4gIHBhZGRpbmctYm90dG9tOiAxdmg7XHJcbiAgcGFkZGluZy10b3A6IDF2aDtcclxuICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gIGdhcDogM3Z3O1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbn1cclxuI2FkZFRvRG8gZm9ybSBkaXYge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxufVxyXG4jYWRkVG9EbyBmb3JtIGJ1dHRvbiB7XHJcbiAgYWxpZ24tc2VsZjogY2VudGVyO1xyXG4gIHdpZHRoOiA1dnc7XHJcbiAgaGVpZ2h0OiA0dmg7XHJcbn1cclxuI25ld1Byb2plY3RPdmVybGF5IHtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgaGVpZ2h0OiAxMDB2aDtcclxuICB3aWR0aDogMTAwdnc7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwwLDAsLjcpO1xyXG59XHJcbiNuZXdQcm9qZWN0T3ZlcmxheSBmb3JtIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbn1cclxuI25ld1Byb2plY3RPdmVybGF5IGJ1dHRvbiB7XHJcbiAgd2lkdGg6IDE1dnc7XHJcbiAgaGVpZ2h0OiAzdmg7XHJcbn1cclxuLnByb2plY3RzIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn1cclxuI3NlbGVjdGVkUHJvamVjdCB7XHJcbiAgYm9yZGVyLXN0eWxlOiBpbnNldDtcclxufVxyXG4jdG9Eb092ZXJsYXkge1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICBoZWlnaHQ6IDEwMHZoO1xyXG4gIHdpZHRoOiAxMDB2dztcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLDAsMCwuNyk7XHJcbn1cclxuI3RvRG9PdmVybGF5SW5uZXJEaXYge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG4gIHdpZHRoOiAyNXZ3O1xyXG4gIHBhZGRpbmc6IDV2dztcclxuICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gIHotaW5kZXg6IDE7XHJcbn1cclxuI3RvRG9PdmVybGF5SW5uZXJEaXYgcCB7XHJcbiAgd29yZC1icmVhazogYnJlYWstYWxsO1xyXG59YCwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvc3R5bGVzLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtFQUNFLGFBQWE7RUFDYixZQUFZO0FBQ2Q7QUFDQTtFQUNFLFFBQVE7RUFDUixhQUFhO0VBQ2Isc0NBQXNDO0VBQ3RDLG1DQUFtQztFQUNuQzs7Ozs7cUNBS21DO0FBQ3JDO0FBQ0E7RUFDRSxpQkFBaUI7RUFDakIscUJBQXFCO0FBQ3ZCO0FBQ0E7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLGtCQUFrQjtFQUNsQixzQkFBc0I7RUFDdEIsbUJBQW1CO0FBQ3JCO0FBQ0E7RUFDRSxXQUFXO0VBQ1gsVUFBVTtBQUNaO0FBQ0E7RUFDRSxrQkFBa0I7RUFDbEIsdUJBQXVCO0FBQ3pCO0FBQ0E7RUFDRSxhQUFhO0VBQ2IsT0FBTztFQUNQLDRCQUE0QjtFQUM1QixtQkFBbUI7RUFDbkIsbUJBQW1CO0FBQ3JCO0FBQ0E7RUFDRSxhQUFhO0FBQ2Y7QUFDQTtFQUNFLDRCQUE0QjtFQUM1QixrQkFBa0I7RUFDbEIsaUJBQWlCO0VBQ2pCLG1CQUFtQjtFQUNuQixnQkFBZ0I7RUFDaEIsbUJBQW1CO0VBQ25CLFFBQVE7RUFDUixhQUFhO0VBQ2IsdUJBQXVCO0FBQ3pCO0FBQ0E7RUFDRSxhQUFhO0VBQ2IsdUJBQXVCO0VBQ3ZCLHNCQUFzQjtBQUN4QjtBQUNBO0VBQ0Usa0JBQWtCO0VBQ2xCLFVBQVU7RUFDVixXQUFXO0FBQ2I7QUFDQTtFQUNFLGtCQUFrQjtFQUNsQixhQUFhO0VBQ2IsWUFBWTtFQUNaLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIsdUJBQXVCO0VBQ3ZCLGdDQUFnQztBQUNsQztBQUNBO0VBQ0UsYUFBYTtFQUNiLHNCQUFzQjtBQUN4QjtBQUNBO0VBQ0UsV0FBVztFQUNYLFdBQVc7QUFDYjtBQUNBO0VBQ0UsYUFBYTtFQUNiLG1CQUFtQjtBQUNyQjtBQUNBO0VBQ0UsbUJBQW1CO0FBQ3JCO0FBQ0E7RUFDRSxrQkFBa0I7RUFDbEIsYUFBYTtFQUNiLFlBQVk7RUFDWixhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLHVCQUF1QjtFQUN2QixnQ0FBZ0M7QUFDbEM7QUFDQTtFQUNFLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsbUJBQW1CO0VBQ25CLHVCQUF1QjtFQUN2QixXQUFXO0VBQ1gsWUFBWTtFQUNaLG1CQUFtQjtFQUNuQixVQUFVO0FBQ1o7QUFDQTtFQUNFLHFCQUFxQjtBQUN2QlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCJodG1sIHtcXHJcXG4gIGhlaWdodDogMTAwdmg7XFxyXFxuICB3aWR0aDogMTAwdnc7XFxyXFxufVxcclxcbmJvZHkge1xcclxcbiAgbWFyZ2luOjA7XFxyXFxuICBkaXNwbGF5OiBncmlkO1xcclxcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoNCwgMjV2dyk7XFxyXFxuICBncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdCg1LCAyMHZoKTtcXHJcXG4gIGdyaWQtdGVtcGxhdGUtYXJlYXM6IFxcclxcbiAgICBcXFwiaGVhZGVyIGhlYWRlciBoZWFkZXIgaGVhZGVyXFxcIlxcclxcbiAgICBcXFwic2lkZUJhciBjb250ZW50IGNvbnRlbnQgY29udGVudFxcXCJcXHJcXG4gICAgXFxcInNpZGVCYXIgY29udGVudCBjb250ZW50IGNvbnRlbnRcXFwiXFxyXFxuICAgIFxcXCJzaWRlQmFyIGNvbnRlbnQgY29udGVudCBjb250ZW50XFxcIlxcclxcbiAgICBcXFwic2lkZUJhciBjb250ZW50IGNvbnRlbnQgY29udGVudFxcXCI7XFxyXFxufVxcclxcbiNoZWFkZXIge1xcclxcbiAgZ3JpZC1hcmVhOiBoZWFkZXI7XFxyXFxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XFxyXFxufVxcclxcbiNzaWRlQmFyIHtcXHJcXG4gIGRpc3BsYXk6IGZsZXg7XFxyXFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcclxcbiAgZ3JpZC1hcmVhOiBzaWRlQmFyO1xcclxcbiAgYmFja2dyb3VuZC1jb2xvcjogYmx1ZTtcXHJcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxufVxcclxcbiNzaWRlQmFyIGJ1dHRvbiB7XFxyXFxuICB3aWR0aDogMTV2dztcXHJcXG4gIGhlaWdodDo1dmg7XFxyXFxufVxcclxcbiNjb250ZW50IHtcXHJcXG4gIGdyaWQtYXJlYTogY29udGVudDtcXHJcXG4gIGJhY2tncm91bmQtY29sb3I6IGdyZWVuO1xcclxcbn1cXHJcXG4udG9Eb0l0ZW0ge1xcclxcbiAgZGlzcGxheTogZmxleDtcXHJcXG4gIGdhcDozdnc7XFxyXFxuICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGNvcmFsO1xcclxcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcXHJcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxufVxcclxcbiNhZGRUb0RvIHtcXHJcXG4gIGRpc3BsYXk6IGZsZXg7XFxyXFxufVxcclxcbiNhZGRUb0RvIGZvcm0ge1xcclxcbiAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRncmVlbjtcXHJcXG4gIHBhZGRpbmctcmlnaHQ6IDN2dztcXHJcXG4gIHBhZGRpbmctbGVmdDogM3Z3O1xcclxcbiAgcGFkZGluZy1ib3R0b206IDF2aDtcXHJcXG4gIHBhZGRpbmctdG9wOiAxdmg7XFxyXFxuICBib3JkZXItcmFkaXVzOiAxMHB4O1xcclxcbiAgZ2FwOiAzdnc7XFxyXFxuICBkaXNwbGF5OiBmbGV4O1xcclxcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxyXFxufVxcclxcbiNhZGRUb0RvIGZvcm0gZGl2IHtcXHJcXG4gIGRpc3BsYXk6IGZsZXg7XFxyXFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXHJcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxyXFxufVxcclxcbiNhZGRUb0RvIGZvcm0gYnV0dG9uIHtcXHJcXG4gIGFsaWduLXNlbGY6IGNlbnRlcjtcXHJcXG4gIHdpZHRoOiA1dnc7XFxyXFxuICBoZWlnaHQ6IDR2aDtcXHJcXG59XFxyXFxuI25ld1Byb2plY3RPdmVybGF5IHtcXHJcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXHJcXG4gIGhlaWdodDogMTAwdmg7XFxyXFxuICB3aWR0aDogMTAwdnc7XFxyXFxuICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcclxcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLDAsMCwuNyk7XFxyXFxufVxcclxcbiNuZXdQcm9qZWN0T3ZlcmxheSBmb3JtIHtcXHJcXG4gIGRpc3BsYXk6IGZsZXg7XFxyXFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcclxcbn1cXHJcXG4jbmV3UHJvamVjdE92ZXJsYXkgYnV0dG9uIHtcXHJcXG4gIHdpZHRoOiAxNXZ3O1xcclxcbiAgaGVpZ2h0OiAzdmg7XFxyXFxufVxcclxcbi5wcm9qZWN0cyB7XFxyXFxuICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG59XFxyXFxuI3NlbGVjdGVkUHJvamVjdCB7XFxyXFxuICBib3JkZXItc3R5bGU6IGluc2V0O1xcclxcbn1cXHJcXG4jdG9Eb092ZXJsYXkge1xcclxcbiAgcG9zaXRpb246IGFic29sdXRlO1xcclxcbiAgaGVpZ2h0OiAxMDB2aDtcXHJcXG4gIHdpZHRoOiAxMDB2dztcXHJcXG4gIGRpc3BsYXk6IGZsZXg7XFxyXFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxyXFxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsMCwwLC43KTtcXHJcXG59XFxyXFxuI3RvRG9PdmVybGF5SW5uZXJEaXYge1xcclxcbiAgZGlzcGxheTogZmxleDtcXHJcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxyXFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XFxyXFxuICB3aWR0aDogMjV2dztcXHJcXG4gIHBhZGRpbmc6IDV2dztcXHJcXG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XFxyXFxuICB6LWluZGV4OiAxO1xcclxcbn1cXHJcXG4jdG9Eb092ZXJsYXlJbm5lckRpdiBwIHtcXHJcXG4gIHdvcmQtYnJlYWs6IGJyZWFrLWFsbDtcXHJcXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzV2l0aE1hcHBpbmdUb1N0cmluZykge1xuICB2YXIgbGlzdCA9IFtdO1xuXG4gIC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBcIlwiO1xuICAgICAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBpdGVtWzVdICE9PSBcInVuZGVmaW5lZFwiO1xuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgY29udGVudCArPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pO1xuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KS5qb2luKFwiXCIpO1xuICB9O1xuXG4gIC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG4gIGxpc3QuaSA9IGZ1bmN0aW9uIGkobW9kdWxlcywgbWVkaWEsIGRlZHVwZSwgc3VwcG9ydHMsIGxheWVyKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCB1bmRlZmluZWRdXTtcbiAgICB9XG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBrID0gMDsgayA8IHRoaXMubGVuZ3RoOyBrKyspIHtcbiAgICAgICAgdmFyIGlkID0gdGhpc1trXVswXTtcbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgZm9yICh2YXIgX2sgPSAwOyBfayA8IG1vZHVsZXMubGVuZ3RoOyBfaysrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19rXSk7XG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICBpZiAodHlwZW9mIGxheWVyICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgaXRlbVs1XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKG1lZGlhKSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChzdXBwb3J0cykge1xuICAgICAgICBpZiAoIWl0ZW1bNF0pIHtcbiAgICAgICAgICBpdGVtWzRdID0gXCJcIi5jb25jYXQoc3VwcG9ydHMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs0XSA9IHN1cHBvcnRzO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuICByZXR1cm4gbGlzdDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZW0pIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdO1xuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKFwiXFxuXCIpO1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIHN0eWxlc0luRE9NID0gW107XG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRPTS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRPTVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4QnlJZGVudGlmaWVyID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdLFxuICAgICAgc3VwcG9ydHM6IGl0ZW1bNF0sXG4gICAgICBsYXllcjogaXRlbVs1XVxuICAgIH07XG4gICAgaWYgKGluZGV4QnlJZGVudGlmaWVyICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciB1cGRhdGVyID0gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucyk7XG4gICAgICBvcHRpb25zLmJ5SW5kZXggPSBpO1xuICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKGksIDAsIHtcbiAgICAgICAgaWRlbnRpZmllcjogaWRlbnRpZmllcixcbiAgICAgICAgdXBkYXRlcjogdXBkYXRlcixcbiAgICAgICAgcmVmZXJlbmNlczogMVxuICAgICAgfSk7XG4gICAgfVxuICAgIGlkZW50aWZpZXJzLnB1c2goaWRlbnRpZmllcik7XG4gIH1cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuZnVuY3Rpb24gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgYXBpID0gb3B0aW9ucy5kb21BUEkob3B0aW9ucyk7XG4gIGFwaS51cGRhdGUob2JqKTtcbiAgdmFyIHVwZGF0ZXIgPSBmdW5jdGlvbiB1cGRhdGVyKG5ld09iaikge1xuICAgIGlmIChuZXdPYmopIHtcbiAgICAgIGlmIChuZXdPYmouY3NzID09PSBvYmouY3NzICYmIG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmIG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXAgJiYgbmV3T2JqLnN1cHBvcnRzID09PSBvYmouc3VwcG9ydHMgJiYgbmV3T2JqLmxheWVyID09PSBvYmoubGF5ZXIpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgYXBpLnVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVtb3ZlKCk7XG4gICAgfVxuICB9O1xuICByZXR1cm4gdXBkYXRlcjtcbn1cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGxpc3QsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIGxpc3QgPSBsaXN0IHx8IFtdO1xuICB2YXIgbGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlKG5ld0xpc3QpIHtcbiAgICBuZXdMaXN0ID0gbmV3TGlzdCB8fCBbXTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBfaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tfaV07XG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuICAgICAgaWYgKHN0eWxlc0luRE9NW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRPTVtfaW5kZXhdLnVwZGF0ZXIoKTtcbiAgICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKF9pbmRleCwgMSk7XG4gICAgICB9XG4gICAgfVxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBtZW1vID0ge307XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gZ2V0VGFyZ2V0KHRhcmdldCkge1xuICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTtcblxuICAgIC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG4gICAgaWYgKHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCAmJiBzdHlsZVRhcmdldCBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gVGhpcyB3aWxsIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBhY2Nlc3MgdG8gaWZyYW1lIGlzIGJsb2NrZWRcbiAgICAgICAgLy8gZHVlIHRvIGNyb3NzLW9yaWdpbiByZXN0cmljdGlvbnNcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgLy8gaXN0YW5idWwgaWdub3JlIG5leHRcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBudWxsO1xuICAgICAgfVxuICAgIH1cbiAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgfVxuICByZXR1cm4gbWVtb1t0YXJnZXRdO1xufVxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydEJ5U2VsZWN0b3IoaW5zZXJ0LCBzdHlsZSkge1xuICB2YXIgdGFyZ2V0ID0gZ2V0VGFyZ2V0KGluc2VydCk7XG4gIGlmICghdGFyZ2V0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgfVxuICB0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xufVxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRCeVNlbGVjdG9yOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuICBvcHRpb25zLnNldEF0dHJpYnV0ZXMoZWxlbWVudCwgb3B0aW9ucy5hdHRyaWJ1dGVzKTtcbiAgb3B0aW9ucy5pbnNlcnQoZWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbiAgcmV0dXJuIGVsZW1lbnQ7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMoc3R5bGVFbGVtZW50KSB7XG4gIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gXCJ1bmRlZmluZWRcIiA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcbiAgaWYgKG5vbmNlKSB7XG4gICAgc3R5bGVFbGVtZW50LnNldEF0dHJpYnV0ZShcIm5vbmNlXCIsIG5vbmNlKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXM7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IFwiXCI7XG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChvYmouc3VwcG9ydHMsIFwiKSB7XCIpO1xuICB9XG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKTtcbiAgfVxuICB2YXIgbmVlZExheWVyID0gdHlwZW9mIG9iai5sYXllciAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIkBsYXllclwiLmNvbmNhdChvYmoubGF5ZXIubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChvYmoubGF5ZXIpIDogXCJcIiwgXCIge1wiKTtcbiAgfVxuICBjc3MgKz0gb2JqLmNzcztcbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfVxuXG4gIC8vIEZvciBvbGQgSUVcbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuICBvcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xufVxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlRWxlbWVudC5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHN0eWxlRWxlbWVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudCk7XG59XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gZG9tQVBJKG9wdGlvbnMpIHtcbiAgaWYgKHR5cGVvZiBkb2N1bWVudCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHJldHVybiB7XG4gICAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZSgpIHt9LFxuICAgICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7fVxuICAgIH07XG4gIH1cbiAgdmFyIHN0eWxlRWxlbWVudCA9IG9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuICByZXR1cm4ge1xuICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKG9iaikge1xuICAgICAgYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopO1xuICAgIH0sXG4gICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KTtcbiAgICB9XG4gIH07XG59XG5tb2R1bGUuZXhwb3J0cyA9IGRvbUFQSTsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCkge1xuICBpZiAoc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZUVsZW1lbnQuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGVFbGVtZW50LnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKTtcbiAgICB9XG4gICAgc3R5bGVFbGVtZW50LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IHN0eWxlVGFnVHJhbnNmb3JtOyIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0aWQ6IG1vZHVsZUlkLFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiAobW9kdWxlWydkZWZhdWx0J10pIDpcblx0XHQoKSA9PiAobW9kdWxlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18uZyA9IChmdW5jdGlvbigpIHtcblx0aWYgKHR5cGVvZiBnbG9iYWxUaGlzID09PSAnb2JqZWN0JykgcmV0dXJuIGdsb2JhbFRoaXM7XG5cdHRyeSB7XG5cdFx0cmV0dXJuIHRoaXMgfHwgbmV3IEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKCk7XG5cdH0gY2F0Y2ggKGUpIHtcblx0XHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ29iamVjdCcpIHJldHVybiB3aW5kb3c7XG5cdH1cbn0pKCk7IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsInZhciBzY3JpcHRVcmw7XG5pZiAoX193ZWJwYWNrX3JlcXVpcmVfXy5nLmltcG9ydFNjcmlwdHMpIHNjcmlwdFVybCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5sb2NhdGlvbiArIFwiXCI7XG52YXIgZG9jdW1lbnQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcuZG9jdW1lbnQ7XG5pZiAoIXNjcmlwdFVybCAmJiBkb2N1bWVudCkge1xuXHRpZiAoZG9jdW1lbnQuY3VycmVudFNjcmlwdClcblx0XHRzY3JpcHRVcmwgPSBkb2N1bWVudC5jdXJyZW50U2NyaXB0LnNyYztcblx0aWYgKCFzY3JpcHRVcmwpIHtcblx0XHR2YXIgc2NyaXB0cyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwic2NyaXB0XCIpO1xuXHRcdGlmKHNjcmlwdHMubGVuZ3RoKSB7XG5cdFx0XHR2YXIgaSA9IHNjcmlwdHMubGVuZ3RoIC0gMTtcblx0XHRcdHdoaWxlIChpID4gLTEgJiYgIXNjcmlwdFVybCkgc2NyaXB0VXJsID0gc2NyaXB0c1tpLS1dLnNyYztcblx0XHR9XG5cdH1cbn1cbi8vIFdoZW4gc3VwcG9ydGluZyBicm93c2VycyB3aGVyZSBhbiBhdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIHlvdSBtdXN0IHNwZWNpZnkgYW4gb3V0cHV0LnB1YmxpY1BhdGggbWFudWFsbHkgdmlhIGNvbmZpZ3VyYXRpb25cbi8vIG9yIHBhc3MgYW4gZW1wdHkgc3RyaW5nIChcIlwiKSBhbmQgc2V0IHRoZSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyB2YXJpYWJsZSBmcm9tIHlvdXIgY29kZSB0byB1c2UgeW91ciBvd24gbG9naWMuXG5pZiAoIXNjcmlwdFVybCkgdGhyb3cgbmV3IEVycm9yKFwiQXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCBpbiB0aGlzIGJyb3dzZXJcIik7XG5zY3JpcHRVcmwgPSBzY3JpcHRVcmwucmVwbGFjZSgvIy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcPy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcL1teXFwvXSskLywgXCIvXCIpO1xuX193ZWJwYWNrX3JlcXVpcmVfXy5wID0gc2NyaXB0VXJsOyIsIl9fd2VicGFja19yZXF1aXJlX18ubmMgPSB1bmRlZmluZWQ7IiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlcy5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlcy5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCIvLyBwcm9qZWN0IGNsYXNzIGFsbG93aW5nIGZvciBkaWZmZXJlbnQgcHJvamVjdCBwYWdlcyBmb3Igb3VyIHRvRG8gaXRlbXNcclxuZXhwb3J0IGNsYXNzIHByb2plY3Qge1xyXG4gIGl0ZW1BcnIgPSBbXTtcclxuICBjb25zdHJ1Y3Rvcihwcm9qZWN0TmFtZSkge1xyXG4gICAgdGhpcy5wcm9qZWN0TmFtZSA9IHByb2plY3ROYW1lO1xyXG4gIH1cclxuICBhZGRUb0RvKHRvRG9JdGVtKSB7XHJcbiAgICB0aGlzLml0ZW1BcnIucHVzaCh0b0RvSXRlbSk7XHJcbiAgfVxyXG4gIHJlbW92ZVRvRG8odG9Eb0l0ZW0pIHtcclxuICAgIHRoaXMuaXRlbUFyciA9IHRoaXMuaXRlbUFyci5maWx0ZXIoaXRlbSA9PiBpdGVtLmtleSAhPT0gdG9Eb0l0ZW0ua2V5KTtcclxuICB9XHJcbn1cclxuXHJcbi8vIHRvRG9JdGVtIGNsYXNzIGFsbG93aW5nIHRvIGNyZWF0ZSBvdXIgdG9EbydzXHJcbmV4cG9ydCBjbGFzcyB0b0RvSXRlbSB7XHJcbiAgc3RhdGljICNsYXN0S2V5ID0gMDtcclxuICBjb25zdHJ1Y3Rvcih0aXRsZSwgZGVzY3JpcHRpb24sIGR1ZURhdGUsIHByaW9yaXR5KSB7XHJcbiAgICB0aGlzLmtleSA9IHRvRG9JdGVtLiNsYXN0S2V5Kys7XHJcbiAgICB0aGlzLnRpdGxlID0gdGl0bGU7XHJcbiAgICB0aGlzLmRlc2NyaXB0aW9uID0gZGVzY3JpcHRpb247XHJcbiAgICB0aGlzLmR1ZURhdGUgPSBkdWVEYXRlO1xyXG4gICAgdGhpcy5wcmlvcml0eSA9IHByaW9yaXR5O1xyXG4gIH1cclxuICBzZXRUaXRsZSh0aXRsZSkge1xyXG4gICAgdGhpcy50aXRsZSA9IHRpdGxlO1xyXG4gIH1cclxuICBzZXREZXNjcmlwdGlvbihkZXNjcmlwdGlvbikge1xyXG4gICAgdGhpcy5kZXNjcmlwdGlvbiA9IGRlc2NyaXB0aW9uO1xyXG4gIH1cclxuICBzZXRkdWVEYXRlKGR1ZURhdGUpIHtcclxuICAgIHRoaXMuZHVlRGF0ZSA9IGR1ZURhdGU7XHJcbiAgfVxyXG4gIHNldFRpdGxlKHByaW9yaXR5KSB7XHJcbiAgICB0aGlzLnByaW9yaXR5ID0gcHJpb3JpdHk7XHJcbiAgfVxyXG59XHJcblxyXG4vLyBjbGFzcyBzdG9yaW5nIGFsbCB0aGUgcHJvamVjdCBjbGFzcyBpbnN0YW5jZXNcclxuZXhwb3J0IGNsYXNzIGFsbFByb2plY3RzIHtcclxuICBzdGF0aWMgI3Byb2plY3RBcnJheSA9IFtdXHJcbiAgc3RhdGljICNjdXJyZW50UHJvamVjdE5hbWUgPSBcIk1haW5cIjtcclxuICBhZGRQcm9qZWN0KHByb2plY3QpIHtcclxuICAgIGFsbFByb2plY3RzLiNwcm9qZWN0QXJyYXkucHVzaChwcm9qZWN0KTtcclxuICB9XHJcbiAgcmVtb3ZlUHJvamVjdChwcm9qZWN0KSB7XHJcbiAgICBhbGxQcm9qZWN0cy4jcHJvamVjdEFycmF5ID0gYWxsUHJvamVjdHMuI3Byb2plY3RBcnJheS5maWx0ZXIoaXRlbSA9PiBpdGVtLnByb2plY3ROYW1lICE9PSBwcm9qZWN0LnByb2plY3ROYW1lKTtcclxuICB9XHJcbiAgZ2V0UHJvamVjdHMoKSB7XHJcbiAgICByZXR1cm4gYWxsUHJvamVjdHMuI3Byb2plY3RBcnJheTtcclxuICB9XHJcbiAgZ2V0Q3VycmVudFByb2plY3QoKSB7XHJcbiAgICBmb3IobGV0IGkgPSAwO2k8YWxsUHJvamVjdHMuI3Byb2plY3RBcnJheS5sZW5ndGg7IGkrKykge1xyXG4gICAgICBpZihhbGxQcm9qZWN0cy4jcHJvamVjdEFycmF5W2ldLnByb2plY3ROYW1lID09PSBhbGxQcm9qZWN0cy4jY3VycmVudFByb2plY3ROYW1lKSB7XHJcbiAgICAgICAgcmV0dXJuIGFsbFByb2plY3RzLiNwcm9qZWN0QXJyYXlbaV07XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbiAgZ2V0Q3VycmVudFByb2plY3RJbmRleCgpIHtcclxuICAgIGZvcihsZXQgaSA9IDA7aTxhbGxQcm9qZWN0cy4jcHJvamVjdEFycmF5Lmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgIGlmKGFsbFByb2plY3RzLiNwcm9qZWN0QXJyYXlbaV0ucHJvamVjdE5hbWUgPT09IGFsbFByb2plY3RzLiNjdXJyZW50UHJvamVjdE5hbWUpIHtcclxuICAgICAgICByZXR1cm4gaTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuICBzZXRDdXJyZW50UHJvamVjdChwcm9qZWN0KSB7XHJcbiAgICBhbGxQcm9qZWN0cy4jY3VycmVudFByb2plY3ROYW1lID0gcHJvamVjdC5wcm9qZWN0TmFtZTtcclxuICB9XHJcbiAgaW5jbHVkZXNQcm9qZWN0KHByb2plY3ROYW1lKSB7XHJcbiAgICBpZihhbGxQcm9qZWN0cy4jcHJvamVjdEFycmF5LmZpbmQoZWxlbWVudCA9PiBlbGVtZW50LnByb2plY3ROYW1lID09PSBwcm9qZWN0TmFtZSkgIT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfVxyXG4gIH1cclxufSIsImltcG9ydCB7IGluaXRpYWxpemVOZXdQcm9qZWN0IH0gZnJvbSBcIi4vc2lkZUJhci5qc1wiO1xyXG5pbXBvcnQgeyBhbGxQcm9qZWN0cyB9IGZyb20gXCIuL3RvRG9DbGFzc2VzLmpzXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBuZXdQcm9qZWN0T3ZlcmxheSgpIHtcclxuICAvLyBvdmVybGF5IGVsZW1lbnRzXHJcbiAgY29uc3QgZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcclxuICAvL2Zvcm0gZWxlbWVudHNcclxuICBjb25zdCBmb3JtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImZvcm1cIik7XHJcbiAgY29uc3QgaW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XHJcbiAgY29uc3QgbGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGFiZWxcIik7XHJcbiAgY29uc3Qgc3VibWl0QnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcclxuICBjb25zdCBjbG9zZUZvcm1CdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xyXG5cclxuICAvL2RpdiBlbGVtZW50IGF0dHJpYnV0ZXNcclxuICBkaXYuc2V0QXR0cmlidXRlKFwiaWRcIixcIm5ld1Byb2plY3RPdmVybGF5XCIpO1xyXG5cclxuICAvL2lucHV0IGVsZW1lbnQgYXR0cmlidXRlc1xyXG4gIGlucHV0LnNldEF0dHJpYnV0ZShcInR5cGVcIixcInRleHRcIik7XHJcbiAgaW5wdXQuc2V0QXR0cmlidXRlKFwibmFtZVwiLFwicHJvamVjdE5hbWVcIik7XHJcblxyXG4gIC8vbGFiZWwgZWxlbWVudCBhdHRyaWJ1dGVzXHJcbiAgbGFiZWwuc2V0QXR0cmlidXRlKFwiZm9yXCIsXCJwcm9qZWN0TmFtZVwiKTtcclxuICBsYWJlbC50ZXh0Q29udGVudCA9IFwiRW50ZXIgcHJvamVjdCBuYW1lOiBcIjtcclxuXHJcbiAgLy8gYnV0dG9uIGF0dHJpYnV0ZXNcclxuICBzdWJtaXRCdXR0b24udGV4dENvbnRlbnQgPSBcIlN1Ym1pdFwiO1xyXG4gIHN1Ym1pdEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwoZSkgPT4ge1xyXG4gICAgY29uc3QgcHJvamVjdHMgPSBuZXcgYWxsUHJvamVjdHMoKTtcclxuICAgIC8vIGVuc3VyZSBwcm9qZWN0IG5hbWUgaXNudCBlbXB0eVxyXG4gICAgaWYoaW5wdXQudmFsdWUudHJpbSgpLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgIGFsZXJ0KFwiUHJvamVjdCBuYW1lIGNhbm5vdCBiZSBlbXB0eSFcIik7XHJcbiAgICB9IC8vIGNoZWNrIHRvIHByZXZlbnQgZHVwbGljYXRlIHByb2plY3QgbmFtZXMgXHJcbiAgICBlbHNlIGlmKHByb2plY3RzLmluY2x1ZGVzUHJvamVjdChpbnB1dC52YWx1ZSkpIHtcclxuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICBhbGVydChcIkNhbiBub3QgaGF2ZSBkdXBsaWNhdGUgcHJvamVjdCFcIik7XHJcbiAgICB9XHJcbiAgICBlbHNlIHtcclxuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICBpbml0aWFsaXplTmV3UHJvamVjdChpbnB1dC52YWx1ZSk7XHJcbiAgICAgIGZvcm0ucmVzZXQoKTtcclxuICAgIH1cclxuICB9KTtcclxuICBjbG9zZUZvcm1CdXR0b24udGV4dENvbnRlbnQgPSBcIkNsb3NlXCI7XHJcbiAgY2xvc2VGb3JtQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICBkaXYucmVtb3ZlKCk7XHJcbiAgfSlcclxuXHJcbiAgZm9ybS5hcHBlbmQobGFiZWwsIGlucHV0LCBzdWJtaXRCdXR0b24sIGNsb3NlRm9ybUJ1dHRvbik7XHJcbiAgZGl2LmFwcGVuZENoaWxkKGZvcm0pO1xyXG4gIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoZGl2KTtcclxufVxyXG4iLCJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiNzZlMzdkMDliNmQ2NTVhNmRmNzQ3NjFhNGRiNTQ2ZmEuc3ZnXCI7IiwiaW1wb3J0IHsgcHJvamVjdCB9IGZyb20gXCIuL3RvRG9DbGFzc2VzLmpzXCI7XHJcbmltcG9ydCBnZW5lcmF0ZUNvbnRlbnQgZnJvbSBcIi4vY29udGVudC5qc1wiO1xyXG5pbXBvcnQgdHJhc2hJbWcgZnJvbSBcIi4vaW1ncy90cmFzaC5zdmdcIjtcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiB0b0RvSXRlbU92ZXJsYXkodG9Eb0l0ZW0sIHByb2plY3QpIHtcclxuICBjb25zdCBkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xyXG4gIGRpdi5zZXRBdHRyaWJ1dGUoXCJpZFwiLFwidG9Eb092ZXJsYXlcIik7XHJcblxyXG4gIC8vIGRvbSBlbGVtZW50IGZvciBlYWNoIHRvZG8gaXRlbSBmb3IgYSBwcm9qZWN0XHJcbiAgY29uc3QgdHJhc2ggPSBuZXcgSW1hZ2UoMjAsMjApO1xyXG4gIHRyYXNoLnNyYyA9IHRyYXNoSW1nO1xyXG4gIC8vIGV2ZW50IGxpc3RlbmVyIHRvIGRlbGV0ZSB0b2RvIGl0ZW1cclxuICB0cmFzaC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gICAgY2xvc2VPdmVybGF5KClcclxuICAgIHByb2plY3QucmVtb3ZlVG9Ebyh0b0RvSXRlbSk7XHJcbiAgICBnZW5lcmF0ZUNvbnRlbnQocHJvamVjdCk7XHJcbiAgfSlcclxuICBjb25zdCBpbm5lckRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gIGlubmVyRGl2LnNldEF0dHJpYnV0ZShcImlkXCIsIFwidG9Eb092ZXJsYXlJbm5lckRpdlwiKTtcclxuICBjb25zdCB0aXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJoMlwiKTtcclxuICB0aXRsZS50ZXh0Q29udGVudCA9IHRvRG9JdGVtLnRpdGxlO1xyXG4gIGNvbnN0IGRlc2NyaXB0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInBcIik7XHJcbiAgZGVzY3JpcHRpb24udGV4dENvbnRlbnQgPSB0b0RvSXRlbS5kZXNjcmlwdGlvbjtcclxuICBjb25zdCBkdWVEYXRlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImgyXCIpO1xyXG4gIGR1ZURhdGUudGV4dENvbnRlbnQgPSB0b0RvSXRlbS5kdWVEYXRlO1xyXG4gIGNvbnN0IHByaW9yaXR5ID0gIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJoMlwiKTtcclxuICBwcmlvcml0eS50ZXh0Q29udGVudCA9IHRvRG9JdGVtLnByaW9yaXR5O1xyXG4gIGNvbnN0IGNsb3NlQnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcclxuICBjbG9zZUJ1dHRvbi50ZXh0Q29udGVudCA9IFwiQ2xvc2VcIlxyXG4gIGNsb3NlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBjbG9zZU92ZXJsYXkpO1xyXG5cclxuICBpbm5lckRpdi5hcHBlbmQodGl0bGUsZGVzY3JpcHRpb24sZHVlRGF0ZSxwcmlvcml0eSwgdHJhc2gsIGNsb3NlQnV0dG9uKTtcclxuICBkaXYuYXBwZW5kQ2hpbGQoaW5uZXJEaXYpO1xyXG4gIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoZGl2KTtcclxufVxyXG5cclxuZnVuY3Rpb24gY2xvc2VPdmVybGF5KCkge1xyXG4gIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidG9Eb092ZXJsYXlcIikucmVtb3ZlKCk7XHJcbn0iLCJpbXBvcnQgbmV3VG9Eb0Zvcm0gZnJvbSBcIi4vbmV3VG9Eb0Zvcm0uanNcIjtcclxuaW1wb3J0IHsgYWxsUHJvamVjdHMsIHRvRG9JdGVtIH0gZnJvbSBcIi4vdG9Eb0NsYXNzZXMuanNcIjtcclxuaW1wb3J0IHsgdG9Eb0l0ZW1PdmVybGF5IH0gZnJvbSBcIi4vdG9Eb0l0ZW1PdmVybGF5LmpzXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZW5lcmF0ZUNvbnRlbnQocHJvamVjdCkge1xyXG4gIGNsZWFyQ29udGVudCgpO1xyXG4gIG5ld1RvRG9Gb3JtKCk7XHJcbiAgdG9Eb0l0ZW1zKHByb2plY3QpO1xyXG59O1xyXG5cclxuLy9hZFRvRG8gdG8gcHJvamVjdCBjbGFzcyBpbnN0YW5jZVxyXG5mdW5jdGlvbiBhZGRUb0RvKHByb2plY3QsIHRvRG9JdGVtKSB7XHJcbiAgcHJvamVjdC5hZGRUb0RvKHRvRG9JdGVtKTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGZvcm1TdWJtaXQoZSkge1xyXG4gIGUucHJldmVudERlZmF1bHQoKTtcclxuICBjb25zdCBhbGxQcm9qZWN0PSBuZXcgYWxsUHJvamVjdHMoKTtcclxuICBjb25zdCBmb3JtRGF0YSA9IG5ldyBGb3JtRGF0YShlLnRhcmdldC5mb3JtKTtcclxuICBhZGRUb0RvKGFsbFByb2plY3QuZ2V0Q3VycmVudFByb2plY3QoKSwgbmV3IHRvRG9JdGVtKGZvcm1EYXRhLmdldChcInRpdGxlXCIpLCBmb3JtRGF0YS5nZXQoXCJkZXNjcmlwdGlvblwiKSwgZm9ybURhdGEuZ2V0KFwiZHVlRGF0ZVwiKSxmb3JtRGF0YS5nZXQoXCJwcmlvcml0eVwiKSkpO1xyXG4gIGdlbmVyYXRlQ29udGVudChhbGxQcm9qZWN0LmdldEN1cnJlbnRQcm9qZWN0KCkpO1xyXG4gIGUudGFyZ2V0LmZvcm0ucmVzZXQoKTtcclxufVxyXG5cclxuLy8gZGlzcGxheSB0b0RvSXRlbXMgaW4gY29udGVudCBhcmVhXHJcbmZ1bmN0aW9uIHRvRG9JdGVtcyhwcm9qZWN0KSB7XHJcbiAgcHJvamVjdC5pdGVtQXJyLmZvckVhY2goZWxlbWVudCA9PiB7XHJcbiAgICAvL29wZW4gZWRpdCBvdmVybGF5XHJcbiAgICBjb25zdCBvdmVybGF5QnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcclxuICAgIG92ZXJsYXlCdXR0b24udGV4dENvbnRlbnQgPSBcIlZpZXcgVG8tRG9cIjtcclxuICAgIG92ZXJsYXlCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgICAgdG9Eb0l0ZW1PdmVybGF5KGVsZW1lbnQsIHByb2plY3QpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgY29uc3QgY29udGVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY29udGVudFwiKTtcclxuICAgIGNvbnN0IGRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XHJcbiAgICBkaXYuc2V0QXR0cmlidXRlKFwiY2xhc3NcIiwgXCJ0b0RvSXRlbVwiKTtcclxuICAgIGNvbnN0IHRpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImgyXCIpO1xyXG4gICAgdGl0bGUudGV4dENvbnRlbnQgPSBlbGVtZW50LnRpdGxlO1xyXG4gICAgY29uc3QgZHVlRGF0ZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJoMlwiKTtcclxuICAgIGR1ZURhdGUudGV4dENvbnRlbnQgPSBlbGVtZW50LmR1ZURhdGU7XHJcbiAgICBkaXYuYXBwZW5kKHRpdGxlLCBkdWVEYXRlLCBvdmVybGF5QnV0dG9uKTtcclxuICAgIGNvbnRlbnQuYXBwZW5kQ2hpbGQoZGl2KTtcclxuICB9KTtcclxufVxyXG5cclxuLy8gY2FsbGVkIGFmdGVyIGVhY2ggbmV3IHRvIGRvIGl0ZW0gYWRkZWQgYXMgdG8gcHJldmVudCBkdXBsaWNhdGlvblxyXG5mdW5jdGlvbiBjbGVhckNvbnRlbnQoKSB7XHJcbiAgY29uc3QgY29udGVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY29udGVudFwiKTtcclxuICBjb250ZW50LnJlcGxhY2VDaGlsZHJlbigpO1xyXG59IiwiaW1wb3J0IHsgZm9ybVN1Ym1pdCB9IGZyb20gXCIuL2NvbnRlbnQuanNcIjtcclxuXHJcbi8vIGdlbmVyYXRlIHRvRG9Gb3JtIGZvciBlYWNoIHByb2plY3RcclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbmV3VG9Eb0Zvcm0oKSB7XHJcbiAgLy8gZWxlbWVudHNcclxuICBjb25zdCBjb250ZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjb250ZW50XCIpO1xyXG4gIGNvbnN0IGRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XHJcbiAgLy9mb3JtIGVsZW1lbnRzXHJcbiAgY29uc3QgZm9ybSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJmb3JtXCIpO1xyXG4gIGNvbnN0IGlucHV0VGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XHJcbiAgY29uc3QgdGV4dEFyZWEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwidGV4dGFyZWFcIik7XHJcbiAgY29uc3QgaW5wdXREYXRlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImlucHV0XCIpO1xyXG4gIGNvbnN0IHNlbGVjdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzZWxlY3RcIik7XHJcbiAgY29uc3QgaGlnaFByaW9yaXR5ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiKTtcclxuICBjb25zdCBtZWRQcmlvcml0eSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIik7XHJcbiAgY29uc3QgbG93UHJpb3JpdHkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIpO1xyXG4gIGNvbnN0IGxhYmVsVGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGFiZWxcIik7XHJcbiAgY29uc3QgbGFiZWxEZXNjcmlwdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJsYWJlbFwiKTtcclxuICBjb25zdCBsYWJlbER1ZURhdGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGFiZWxcIik7XHJcbiAgY29uc3QgbGFiZWxQcmlvcml0eSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJsYWJlbFwiKTtcclxuICBjb25zdCBzdWJtaXRCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xyXG5cclxuICAvL2RpdiBlbGVtZW50IGF0dHJpYnV0ZXNcclxuICBkaXYuc2V0QXR0cmlidXRlKFwiaWRcIixcImFkZFRvRG9cIik7XHJcblxyXG4gIC8vaW5wdXQgZWxlbWVudCBhdHRyaWJ1dGVzIGFuZCBsYWJlbCBlbGVtZW50IGF0dHJpYnV0ZXNcclxuICAvLyB0aXRsZSBmb3JtIGlucHV0XHJcbiAgY29uc3QgdGl0bGVEaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xyXG4gIGxhYmVsVGl0bGUuc2V0QXR0cmlidXRlKFwiZm9yXCIsXCJ0aXRsZVwiKTtcclxuICBsYWJlbFRpdGxlLnRleHRDb250ZW50ID0gXCJUaXRsZTogXCI7XHJcbiAgaW5wdXRUaXRsZS5zZXRBdHRyaWJ1dGUoXCJ0eXBlXCIsXCJ0ZXh0XCIpO1xyXG4gIGlucHV0VGl0bGUuc2V0QXR0cmlidXRlKFwibmFtZVwiLFwidGl0bGVcIik7XHJcbiAgdGl0bGVEaXYuYXBwZW5kKGxhYmVsVGl0bGUsaW5wdXRUaXRsZSk7XHJcblxyXG4gIC8vZGVzY3JpcHRpb24gYXJlYSBmb3IgZm9ybVxyXG4gIGNvbnN0IGRlc2NEaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xyXG4gIGxhYmVsRGVzY3JpcHRpb24uc2V0QXR0cmlidXRlKFwiZm9yXCIsXCJkZXNjcmlwdGlvblwiKTtcclxuICBsYWJlbERlc2NyaXB0aW9uLnRleHRDb250ZW50ID0gXCJEZXNjcmlwdGlvbjogXCI7XHJcbiAgdGV4dEFyZWEuc2V0QXR0cmlidXRlKFwibmFtZVwiLFwiZGVzY3JpcHRpb25cIik7XHJcbiAgdGV4dEFyZWEuc2V0QXR0cmlidXRlKFwicm93c1wiLFwiM1wiKTtcclxuICB0ZXh0QXJlYS5zZXRBdHRyaWJ1dGUoXCJjb2xzXCIsXCIyMFwiKTtcclxuICBkZXNjRGl2LmFwcGVuZChsYWJlbERlc2NyaXB0aW9uLHRleHRBcmVhKTtcclxuXHJcbiAgLy8gZHVlIGRhdGUgZm9yIGZvcm1cclxuICBjb25zdCBkdWVEYXRlRGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcclxuICBsYWJlbER1ZURhdGUuc2V0QXR0cmlidXRlKFwiZm9yXCIsXCJkdWVEYXRlXCIpO1xyXG4gIGxhYmVsRHVlRGF0ZS50ZXh0Q29udGVudCA9IFwiRHVlIERhdGU6IFwiO1xyXG4gIGlucHV0RGF0ZS5zZXRBdHRyaWJ1dGUoXCJ0eXBlXCIsXCJkYXRlXCIpO1xyXG4gIGlucHV0RGF0ZS5zZXRBdHRyaWJ1dGUoXCJuYW1lXCIsXCJkdWVEYXRlXCIpO1xyXG4gIGR1ZURhdGVEaXYuYXBwZW5kKGxhYmVsRHVlRGF0ZSxpbnB1dERhdGUpO1xyXG5cclxuICAvLyBwcmlvcml0eSBzZWxlY3Rpb24gZm9yIGZvcm1cclxuICBjb25zdCBwcmlvcml0eURpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XHJcbiAgbGFiZWxQcmlvcml0eS5zZXRBdHRyaWJ1dGUoXCJmb3JcIixcInByaW9yaXR5XCIpO1xyXG4gIGxhYmVsUHJpb3JpdHkudGV4dENvbnRlbnQgPSBcIlByaW9yaXR5OiBcIjtcclxuICBzZWxlY3Quc2V0QXR0cmlidXRlKFwibmFtZVwiLFwicHJpb3JpdHlcIik7XHJcbiAgaGlnaFByaW9yaXR5LnNldEF0dHJpYnV0ZShcInZhbHVlXCIsXCJoaWdoUHJpb3JpdHlcIik7XHJcbiAgaGlnaFByaW9yaXR5LnRleHRDb250ZW50ID0gXCJIaWdoXCI7XHJcbiAgbWVkUHJpb3JpdHkuc2V0QXR0cmlidXRlKFwidmFsdWVcIixcIm1lZFByaW9yaXR5XCIpO1xyXG4gIG1lZFByaW9yaXR5LnRleHRDb250ZW50ID0gXCJNZWRpdW1cIjtcclxuICBsb3dQcmlvcml0eS5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLFwibG93UHJpb3JpdHlcIik7XHJcbiAgbG93UHJpb3JpdHkudGV4dENvbnRlbnQgPSBcIkxvd1wiO1xyXG4gIHNlbGVjdC5hcHBlbmQoaGlnaFByaW9yaXR5LCBtZWRQcmlvcml0eSwgbG93UHJpb3JpdHkpO1xyXG4gIHByaW9yaXR5RGl2LmFwcGVuZChsYWJlbFByaW9yaXR5LCBzZWxlY3QpO1xyXG5cclxuICAvL3N1Ym1pdCBidXR0b25cclxuICBzdWJtaXRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZvcm1TdWJtaXQpO1xyXG4gIHN1Ym1pdEJ1dHRvbi50ZXh0Q29udGVudCA9IFwiQWRkIFRvLURvXCI7XHJcbiAgZm9ybS5hcHBlbmQodGl0bGVEaXYsIGRlc2NEaXYsIGR1ZURhdGVEaXYsIHByaW9yaXR5RGl2LCBzdWJtaXRCdXR0b24pO1xyXG5cclxuICBkaXYuYXBwZW5kQ2hpbGQoZm9ybSlcclxuICBjb250ZW50LmFwcGVuZENoaWxkKGRpdik7XHJcbn0iLCJpbXBvcnQgbmV3UHJvamVjdE92ZXJsYXkgZnJvbSBcIi4vbmV3UHJvamVjdE92ZXJsYXkuanNcIjtcclxuaW1wb3J0IHtwcm9qZWN0LCBhbGxQcm9qZWN0c30gZnJvbSBcIi4vdG9Eb0NsYXNzZXMuanNcIjtcclxuaW1wb3J0IGdlbmVyYXRlQ29udGVudCBmcm9tIFwiLi9jb250ZW50LmpzXCI7XHJcbmltcG9ydCB0cmFzaEltZyBmcm9tIFwiLi9pbWdzL3RyYXNoLnN2Z1wiO1xyXG5cclxuLy8gZGlzcGxheXMgb3VyIGR5bmFtaWNhbGx5IGdlbmVyYXRlZCBzaWRlYmFyXHJcbmV4cG9ydCBjb25zdCBzaWRlQmFyQm9keSA9ICgoKSA9PiB7XHJcbiAgaW5pdGlhbGl6ZURlZmF1bHRQcm9qZWN0KCk7XHJcbiAgZGlzcGxheVByb2plY3RzKCk7XHJcbiAgY3JlYXRlTmV3UHJvamVjdCgpO1xyXG59KSgpIFxyXG5cclxuLy8gZnVuY3Rpb24gdG8gYWRkIG1vcmUgcHJvamVjdHNcclxuZnVuY3Rpb24gY3JlYXRlTmV3UHJvamVjdCgpIHtcclxuICBjb25zdCBzaWRlQmFyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzaWRlQmFyXCIpO1xyXG4gIGNvbnN0IG5ld1Byb2plY3RCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xyXG5cclxuICBuZXdQcm9qZWN0QnV0dG9uLnRleHRDb250ZW50ID0gXCJOZXcgUHJvamVjdFwiO1xyXG5cclxuICBuZXdQcm9qZWN0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBuZXdQcm9qZWN0T3ZlcmxheSlcclxuICBcclxuICBzaWRlQmFyLmFwcGVuZENoaWxkKG5ld1Byb2plY3RCdXR0b24pO1xyXG59XHJcblxyXG5mdW5jdGlvbiBpbml0aWFsaXplRGVmYXVsdFByb2plY3QoKSB7XHJcbiAgICBjb25zdCBhbGxQcm9qZWN0ID0gbmV3IGFsbFByb2plY3RzKClcclxuICAgIGNvbnN0IGRlZmF1bHRQcm9qZWN0ID0gbmV3IHByb2plY3QoXCJNYWluXCIpXHJcbiAgICBhbGxQcm9qZWN0LmFkZFByb2plY3QoZGVmYXVsdFByb2plY3QpO1xyXG4gICAgXHJcbiAgICBjb25zdCBkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xyXG4gICAgY29uc3QgaDMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaDNcIik7XHJcbiAgICBoMy50ZXh0Q29udGVudCA9IGRlZmF1bHRQcm9qZWN0LnByb2plY3ROYW1lO1xyXG4gICAgZGl2LnNldEF0dHJpYnV0ZShcImlkXCIsXCJzZWxlY3RlZFByb2plY3RcIik7XHJcbiAgICBkaXYuc2V0QXR0cmlidXRlKFwiY2xhc3NcIixcImRlZmF1bHRQcm9qZWN0XCIpO1xyXG4gICAgLy8gZXZlbnQgbGlzdGVuZXIgdG8gZ2VuZXJhdGUgdG9kbyBpdGVtcyBmb3IgcHJvamVjdCBpbiBjb250ZW50XHJcbiAgICBkaXYuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsKCkgPT4ge1xyXG4gICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3NlbGVjdGVkUHJvamVjdFwiKS5yZW1vdmVBdHRyaWJ1dGUoXCJpZFwiKTtcclxuICAgICAgY3VycmVudFNlbGVjdGVkUHJvamVjdChkZWZhdWx0UHJvamVjdClcclxuICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzaWRlQmFyXCIpLmNoaWxkcmVuWzBdLnNldEF0dHJpYnV0ZShcImlkXCIsXCJzZWxlY3RlZFByb2plY3RcIik7XHJcbiAgICAgIGdlbmVyYXRlQ29udGVudChkZWZhdWx0UHJvamVjdClcclxuICAgIH0pO1xyXG4gICAgZGl2LmFwcGVuZENoaWxkKGgzKTtcclxuXHJcbiAgICBjb25zdCBzaWRlQmFyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzaWRlQmFyXCIpO1xyXG4gICAgc2lkZUJhci5hcHBlbmRDaGlsZChkaXYpO1xyXG4gICAgZ2VuZXJhdGVDb250ZW50KGRlZmF1bHRQcm9qZWN0KTtcclxufVxyXG5cclxuLy8gaW5pdGlhbGl6ZXMgYSBuZXcgcHJvamVjdCB0byBkaXNwbGF5IG9uIHRoZSBzaWRlQmFyIGJ5IGZpcnN0IGNhbGxpbmdcclxuZXhwb3J0IGNvbnN0IGluaXRpYWxpemVOZXdQcm9qZWN0ID0gKHByb2plY3ROYW1lKSA9PiB7XHJcbiAgY29uc3QgYWxsUHJvamVjdCA9IG5ldyBhbGxQcm9qZWN0cygpXHJcbiAgYWxsUHJvamVjdC5hZGRQcm9qZWN0KG5ldyBwcm9qZWN0KHByb2plY3ROYW1lKSlcclxuICBjbGVhclByb2plY3RzKCk7XHJcbiAgZGlzcGxheVByb2plY3RzKCk7XHJcbiAgLy8gcmVpbml0aWFsaXplcyBpZCBhdHRyaWJ1dGUgZm9yIG91ciBjdXJyZW50IHNlbGVjdGVkIHByb2plY3RcclxuICAvLyBlbnN1cmUgY3VycmVudCBwcm9qZWN0IGlzbnQgTWFpbiB0byBwcmV2ZW50IGVycm9yIHdoZXJlIHNlbGVjdGVkUHJvamVjdCBpZCBpcyBnaXZlbiB0byBidXR0b25cclxuICBpZihhbGxQcm9qZWN0LmdldEN1cnJlbnRQcm9qZWN0SW5kZXgoKSAhPT0gMCkge1xyXG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzaWRlQmFyXCIpLmNoaWxkcmVuWzErYWxsUHJvamVjdC5nZXRDdXJyZW50UHJvamVjdEluZGV4KCldLnNldEF0dHJpYnV0ZShcImlkXCIsXCJzZWxlY3RlZFByb2plY3RcIik7XHJcbiAgfVxyXG59XHJcblxyXG4vLyBjbGVhcnMgcHJvamVjdHMgZnJvbSBET00gdG8gcHJldmVudCBkdXBsaWNhdGlvbiB3aGVuIHJ1bm5pbmcgdGhlIGRpc3BsYXlQcm9qZWN0cyBmdW5jdGlvblxyXG5mdW5jdGlvbiBjbGVhclByb2plY3RzKCkge1xyXG4gIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5wcm9qZWN0cycpLmZvckVhY2goZSA9PiBlLnJlbW92ZSgpKTtcclxufVxyXG5cclxuLy8gZGlzcGxheXMgb3VyIHByb2plY3RzIG9uIHRoZSBzaWRlYmFyXHJcbmZ1bmN0aW9uIGRpc3BsYXlQcm9qZWN0cygpIHtcclxuICBjb25zdCBwcm9qZWN0cyA9IG5ldyBhbGxQcm9qZWN0cygpO1xyXG4gIHByb2plY3RzLmdldFByb2plY3RzKCkuZm9yRWFjaChlbGVtZW50ID0+IHtcclxuICAgIGlmKGVsZW1lbnQucHJvamVjdE5hbWUgPT09IFwiTWFpblwiKSB7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIGNvbnN0IGRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XHJcbiAgICBjb25zdCB0cmFzaCA9IG5ldyBJbWFnZSgyMCwyMCk7XHJcbiAgICB0cmFzaC5zcmMgPSB0cmFzaEltZztcclxuXHJcbiAgICAvLyBldmVudCBsaXN0ZW5lciBmb3IgZGVsZXRpbmcgcHJvamVjdHNcclxuICAgIC8vIGlmIHByb2plY3QgY3VycmVudGx5IG9uIGRlbGV0ZWQgZGVmYXVsdHMgdG8gTWFpbiwgb3RoZXJ3aXNlIHN0YXlzIG9uIGN1cnJlbnQgcHJvamVjdFxyXG4gICAgdHJhc2guYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsKGUpID0+IHtcclxuICAgICAgcHJvamVjdHMucmVtb3ZlUHJvamVjdChlbGVtZW50KTtcclxuICAgICAgaWYoZS50YXJnZXQucGFyZW50RWxlbWVudC5oYXNBdHRyaWJ1dGUoXCJpZFwiKSkge1xyXG4gICAgICAgIGN1cnJlbnRTZWxlY3RlZFByb2plY3QocHJvamVjdHMuZ2V0UHJvamVjdHMoKVswXSk7XHJcbiAgICAgICAgZ2VuZXJhdGVDb250ZW50KHByb2plY3RzLmdldFByb2plY3RzKClbMF0pXHJcbiAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5kZWZhdWx0UHJvamVjdFwiKS5zZXRBdHRyaWJ1dGUoXCJpZFwiLFwic2VsZWN0ZWRQcm9qZWN0XCIpO1xyXG4gICAgICAgIGNsZWFyUHJvamVjdHMoKTtcclxuICAgICAgICBkaXNwbGF5UHJvamVjdHMoKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBjbGVhclByb2plY3RzKCk7XHJcbiAgICAgICAgZGlzcGxheVByb2plY3RzKCk7XHJcbiAgICAgICAgLy8gcmVpbml0aWFsaXplcyBpZCBhdHRyaWJ1dGUgZm9yIG91ciBjdXJyZW50IHNlbGVjdGVkIHByb2plY3RcclxuICAgICAgICAvLyBlbnN1cmUgY3VycmVudCBwcm9qZWN0IGlzbnQgTWFpbiB0byBwcmV2ZW50IGVycm9yIHdoZXJlIHNlbGVjdGVkUHJvamVjdCBpZCBpcyBnaXZlbiB0byBidXR0b25cclxuICAgICAgICBpZihwcm9qZWN0cy5nZXRDdXJyZW50UHJvamVjdEluZGV4KCkgIT09IDApIHtcclxuICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic2lkZUJhclwiKS5jaGlsZHJlblsxK3Byb2plY3RzLmdldEN1cnJlbnRQcm9qZWN0SW5kZXgoKV0uc2V0QXR0cmlidXRlKFwiaWRcIixcInNlbGVjdGVkUHJvamVjdFwiKTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH0pXHJcbiAgICBjb25zdCBoMyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJoM1wiKTtcclxuICAgIGgzLnRleHRDb250ZW50ID0gZWxlbWVudC5wcm9qZWN0TmFtZTtcclxuICAgIGRpdi5zZXRBdHRyaWJ1dGUoXCJjbGFzc1wiLFwicHJvamVjdHNcIik7XHJcblxyXG4gICAgLy8gZXZlbnQgbGlzdGVuZXIgdG8gZ2VuZXJhdGUgdG9kbyBpdGVtcyBmb3IgcHJvamVjdCBpbiBjb250ZW50XHJcbiAgICBoMy5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwoKSA9PiB7XHJcbiAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjc2VsZWN0ZWRQcm9qZWN0XCIpLnJlbW92ZUF0dHJpYnV0ZShcImlkXCIpO1xyXG4gICAgICBjdXJyZW50U2VsZWN0ZWRQcm9qZWN0KGVsZW1lbnQpXHJcbiAgICAgIC8vIHJlaW5pdGlhbGl6ZXMgaWQgYXR0cmlidXRlIGZvciBvdXIgY3VycmVudCBzZWxlY3RlZCBwcm9qZWN0XHJcbiAgICAgIC8vIGVuc3VyZSBjdXJyZW50IHByb2plY3QgaXNudCBNYWluIHRvIHByZXZlbnQgZXJyb3Igd2hlcmUgc2VsZWN0ZWRQcm9qZWN0IGlkIGlzIGdpdmVuIHRvIGJ1dHRvblxyXG4gICAgICBpZihwcm9qZWN0cy5nZXRDdXJyZW50UHJvamVjdEluZGV4KCkgIT09IDApIHtcclxuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNpZGVCYXJcIikuY2hpbGRyZW5bMStwcm9qZWN0cy5nZXRDdXJyZW50UHJvamVjdEluZGV4KCldLnNldEF0dHJpYnV0ZShcImlkXCIsXCJzZWxlY3RlZFByb2plY3RcIik7XHJcbiAgICAgIH1cclxuICAgICAgZ2VuZXJhdGVDb250ZW50KGVsZW1lbnQpXHJcbiAgICB9KTtcclxuICAgIGRpdi5hcHBlbmQoaDMsIHRyYXNoKTtcclxuXHJcbiAgICBjb25zdCBzaWRlQmFyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzaWRlQmFyXCIpO1xyXG4gICAgc2lkZUJhci5hcHBlbmRDaGlsZChkaXYpO1xyXG4gIH0pO1xyXG59XHJcblxyXG4vL2Z1bmN0aW9uIHRvIGNoYW5nZSB0aGUgY3VycmVudFByb2plY3ROYW1lIGluIHRoZSBhbGxQcm9qZWN0cyBjbGFzcywga2VlcHMgdHJhY2sgb2Ygd2hpY2ggdG9kbyBsaXN0IGl0ZW1zIHRvIGRpc3BsYXlcclxuZnVuY3Rpb24gY3VycmVudFNlbGVjdGVkUHJvamVjdChwcm9qZWN0TmFtZSkge1xyXG4gIGNvbnN0IHByb2plY3RzID0gbmV3IGFsbFByb2plY3RzKCk7XHJcbiAgcHJvamVjdHMuc2V0Q3VycmVudFByb2plY3QocHJvamVjdE5hbWUpO1xyXG59XHJcblxyXG4iXSwibmFtZXMiOlsiX19fQ1NTX0xPQURFUl9FWFBPUlRfX18iLCJwdXNoIiwibW9kdWxlIiwiaWQiLCJleHBvcnRzIiwiY3NzV2l0aE1hcHBpbmdUb1N0cmluZyIsImxpc3QiLCJ0b1N0cmluZyIsInRoaXMiLCJtYXAiLCJpdGVtIiwiY29udGVudCIsIm5lZWRMYXllciIsImNvbmNhdCIsImxlbmd0aCIsImpvaW4iLCJpIiwibW9kdWxlcyIsIm1lZGlhIiwiZGVkdXBlIiwic3VwcG9ydHMiLCJsYXllciIsInVuZGVmaW5lZCIsImFscmVhZHlJbXBvcnRlZE1vZHVsZXMiLCJrIiwiX2siLCJjc3NNYXBwaW5nIiwiYnRvYSIsImJhc2U2NCIsInVuZXNjYXBlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiSlNPTiIsInN0cmluZ2lmeSIsImRhdGEiLCJzb3VyY2VNYXBwaW5nIiwic3R5bGVzSW5ET00iLCJnZXRJbmRleEJ5SWRlbnRpZmllciIsImlkZW50aWZpZXIiLCJyZXN1bHQiLCJtb2R1bGVzVG9Eb20iLCJvcHRpb25zIiwiaWRDb3VudE1hcCIsImlkZW50aWZpZXJzIiwiYmFzZSIsImNvdW50IiwiaW5kZXhCeUlkZW50aWZpZXIiLCJvYmoiLCJjc3MiLCJzb3VyY2VNYXAiLCJyZWZlcmVuY2VzIiwidXBkYXRlciIsImFkZEVsZW1lbnRTdHlsZSIsImJ5SW5kZXgiLCJzcGxpY2UiLCJhcGkiLCJkb21BUEkiLCJ1cGRhdGUiLCJuZXdPYmoiLCJyZW1vdmUiLCJsYXN0SWRlbnRpZmllcnMiLCJuZXdMaXN0IiwiaW5kZXgiLCJuZXdMYXN0SWRlbnRpZmllcnMiLCJfaSIsIl9pbmRleCIsIm1lbW8iLCJpbnNlcnQiLCJzdHlsZSIsInRhcmdldCIsInN0eWxlVGFyZ2V0IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwid2luZG93IiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJoZWFkIiwiZSIsImdldFRhcmdldCIsIkVycm9yIiwiYXBwZW5kQ2hpbGQiLCJlbGVtZW50IiwiY3JlYXRlRWxlbWVudCIsInNldEF0dHJpYnV0ZXMiLCJhdHRyaWJ1dGVzIiwic3R5bGVFbGVtZW50Iiwibm9uY2UiLCJzZXRBdHRyaWJ1dGUiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJzdHlsZVRhZ1RyYW5zZm9ybSIsImFwcGx5IiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwicmVtb3ZlU3R5bGVFbGVtZW50Iiwic3R5bGVTaGVldCIsImNzc1RleHQiLCJmaXJzdENoaWxkIiwiY3JlYXRlVGV4dE5vZGUiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwibiIsImdldHRlciIsIl9fZXNNb2R1bGUiLCJkIiwiYSIsImRlZmluaXRpb24iLCJrZXkiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiZyIsImdsb2JhbFRoaXMiLCJGdW5jdGlvbiIsInByb3AiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJzY3JpcHRVcmwiLCJpbXBvcnRTY3JpcHRzIiwibG9jYXRpb24iLCJjdXJyZW50U2NyaXB0Iiwic3JjIiwic2NyaXB0cyIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwicmVwbGFjZSIsInAiLCJuYyIsImxvY2FscyIsInByb2plY3QiLCJpdGVtQXJyIiwiY29uc3RydWN0b3IiLCJwcm9qZWN0TmFtZSIsImFkZFRvRG8iLCJ0b0RvSXRlbSIsInJlbW92ZVRvRG8iLCJmaWx0ZXIiLCJzdGF0aWMiLCJ0aXRsZSIsImRlc2NyaXB0aW9uIiwiZHVlRGF0ZSIsInByaW9yaXR5Iiwic2V0VGl0bGUiLCJzZXREZXNjcmlwdGlvbiIsInNldGR1ZURhdGUiLCJhbGxQcm9qZWN0cyIsImFkZFByb2plY3QiLCJyZW1vdmVQcm9qZWN0IiwiZ2V0UHJvamVjdHMiLCJnZXRDdXJyZW50UHJvamVjdCIsImdldEN1cnJlbnRQcm9qZWN0SW5kZXgiLCJzZXRDdXJyZW50UHJvamVjdCIsImluY2x1ZGVzUHJvamVjdCIsImZpbmQiLCJuZXdQcm9qZWN0T3ZlcmxheSIsImRpdiIsImZvcm0iLCJpbnB1dCIsImxhYmVsIiwic3VibWl0QnV0dG9uIiwiY2xvc2VGb3JtQnV0dG9uIiwidGV4dENvbnRlbnQiLCJhZGRFdmVudExpc3RlbmVyIiwicHJvamVjdHMiLCJ2YWx1ZSIsInRyaW0iLCJwcmV2ZW50RGVmYXVsdCIsImFsZXJ0IiwiaW5pdGlhbGl6ZU5ld1Byb2plY3QiLCJyZXNldCIsImFwcGVuZCIsImJvZHkiLCJjbG9zZU92ZXJsYXkiLCJnZXRFbGVtZW50QnlJZCIsImdlbmVyYXRlQ29udGVudCIsInJlcGxhY2VDaGlsZHJlbiIsImlucHV0VGl0bGUiLCJ0ZXh0QXJlYSIsImlucHV0RGF0ZSIsInNlbGVjdCIsImhpZ2hQcmlvcml0eSIsIm1lZFByaW9yaXR5IiwibG93UHJpb3JpdHkiLCJsYWJlbFRpdGxlIiwibGFiZWxEZXNjcmlwdGlvbiIsImxhYmVsRHVlRGF0ZSIsImxhYmVsUHJpb3JpdHkiLCJ0aXRsZURpdiIsImRlc2NEaXYiLCJkdWVEYXRlRGl2IiwicHJpb3JpdHlEaXYiLCJmb3JtU3VibWl0IiwibmV3VG9Eb0Zvcm0iLCJmb3JFYWNoIiwib3ZlcmxheUJ1dHRvbiIsInRyYXNoIiwiSW1hZ2UiLCJpbm5lckRpdiIsImNsb3NlQnV0dG9uIiwidG9Eb0l0ZW1PdmVybGF5IiwidG9Eb0l0ZW1zIiwiYWxsUHJvamVjdCIsImZvcm1EYXRhIiwiRm9ybURhdGEiLCJkZWZhdWx0UHJvamVjdCIsImgzIiwicmVtb3ZlQXR0cmlidXRlIiwiY3VycmVudFNlbGVjdGVkUHJvamVjdCIsImNoaWxkcmVuIiwiaW5pdGlhbGl6ZURlZmF1bHRQcm9qZWN0IiwiZGlzcGxheVByb2plY3RzIiwic2lkZUJhciIsIm5ld1Byb2plY3RCdXR0b24iLCJjcmVhdGVOZXdQcm9qZWN0IiwiY2xlYXJQcm9qZWN0cyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJwYXJlbnRFbGVtZW50IiwiaGFzQXR0cmlidXRlIl0sInNvdXJjZVJvb3QiOiIifQ==